(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))r(l);new MutationObserver(l=>{for(const s of l)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function n(l){const s={};return l.integrity&&(s.integrity=l.integrity),l.referrerpolicy&&(s.referrerPolicy=l.referrerpolicy),l.crossorigin==="use-credentials"?s.credentials="include":l.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(l){if(l.ep)return;l.ep=!0;const s=n(l);fetch(l.href,s)}})();function Pr(e,t){const n=Object.create(null),r=e.split(",");for(let l=0;l<r.length;l++)n[r[l]]=!0;return t?l=>!!n[l.toLowerCase()]:l=>!!n[l]}function Lr(e){if(j(e)){const t={};for(let n=0;n<e.length;n++){const r=e[n],l=be(r)?Fo(r):Lr(r);if(l)for(const s in l)t[s]=l[s]}return t}else{if(be(e))return e;if(oe(e))return e}}const Oo=/;(?![^(]*\))/g,yo=/:([^]+)/,Io=/\/\*.*?\*\//gs;function Fo(e){const t={};return e.replace(Io,"").split(Oo).forEach(n=>{if(n){const r=n.split(yo);r.length>1&&(t[r[0].trim()]=r[1].trim())}}),t}function Dr(e){let t="";if(be(e))t=e;else if(j(e))for(let n=0;n<e.length;n++){const r=Dr(e[n]);r&&(t+=r+" ")}else if(oe(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}const Xo="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",qo=Pr(Xo);function cl(e){return!!e||e===""}const Ae=e=>be(e)?e:e==null?"":j(e)||oe(e)&&(e.toString===dl||!x(e.toString))?JSON.stringify(e,il,2):String(e),il=(e,t)=>t&&t.__v_isRef?il(e,t.value):Qt(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((n,[r,l])=>(n[`${r} =>`]=l,n),{})}:ul(t)?{[`Set(${t.size})`]:[...t.values()]}:oe(t)&&!j(t)&&!gl(t)?String(t):t,le={},Ht=[],Re=()=>{},Ho=()=>!1,Qo=/^on[^a-z]/,Nn=e=>Qo.test(e),Nr=e=>e.startsWith("onUpdate:"),Ee=Object.assign,Tr=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},Vo=Object.prototype.hasOwnProperty,J=(e,t)=>Vo.call(e,t),j=Array.isArray,Qt=e=>Tn(e)==="[object Map]",ul=e=>Tn(e)==="[object Set]",x=e=>typeof e=="function",be=e=>typeof e=="string",Or=e=>typeof e=="symbol",oe=e=>e!==null&&typeof e=="object",fl=e=>oe(e)&&x(e.then)&&x(e.catch),dl=Object.prototype.toString,Tn=e=>dl.call(e),Mo=e=>Tn(e).slice(8,-1),gl=e=>Tn(e)==="[object Object]",yr=e=>be(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,pn=Pr(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),On=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},Yo=/-(\w)/g,nt=On(e=>e.replace(Yo,(t,n)=>n?n.toUpperCase():"")),Wo=/\B([A-Z])/g,Rt=On(e=>e.replace(Wo,"-$1").toLowerCase()),yn=On(e=>e.charAt(0).toUpperCase()+e.slice(1)),Rn=On(e=>e?`on${yn(e)}`:""),nn=(e,t)=>!Object.is(e,t),Kn=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},Bn=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},hl=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let ls;const Uo=()=>ls||(ls=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let Je;class ml{constructor(t=!1){this.detached=t,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Je,!t&&Je&&(this.index=(Je.scopes||(Je.scopes=[])).push(this)-1)}run(t){if(this.active){const n=Je;try{return Je=this,t()}finally{Je=n}}}on(){Je=this}off(){Je=this.parent}stop(t){if(this.active){let n,r;for(n=0,r=this.effects.length;n<r;n++)this.effects[n].stop();for(n=0,r=this.cleanups.length;n<r;n++)this.cleanups[n]();if(this.scopes)for(n=0,r=this.scopes.length;n<r;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!t){const l=this.parent.scopes.pop();l&&l!==this&&(this.parent.scopes[this.index]=l,l.index=this.index)}this.parent=void 0,this.active=!1}}}function Go(e){return new ml(e)}function jo(e,t=Je){t&&t.active&&t.effects.push(e)}const Ir=e=>{const t=new Set(e);return t.w=0,t.n=0,t},Cl=e=>(e.w&mt)>0,bl=e=>(e.n&mt)>0,Ro=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=mt},Ko=e=>{const{deps:t}=e;if(t.length){let n=0;for(let r=0;r<t.length;r++){const l=t[r];Cl(l)&&!bl(l)?l.delete(e):t[n++]=l,l.w&=~mt,l.n&=~mt}t.length=n}},$n=new WeakMap;let kt=0,mt=1;const er=30;let Ue;const Tt=Symbol(""),tr=Symbol("");class Fr{constructor(t,n=null,r){this.fn=t,this.scheduler=n,this.active=!0,this.deps=[],this.parent=void 0,jo(this,r)}run(){if(!this.active)return this.fn();let t=Ue,n=gt;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=Ue,Ue=this,gt=!0,mt=1<<++kt,kt<=er?Ro(this):os(this),this.fn()}finally{kt<=er&&Ko(this),mt=1<<--kt,Ue=this.parent,gt=n,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Ue===this?this.deferStop=!0:this.active&&(os(this),this.onStop&&this.onStop(),this.active=!1)}}function os(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}let gt=!0;const Al=[];function Kt(){Al.push(gt),gt=!1}function xt(){const e=Al.pop();gt=e===void 0?!0:e}function Xe(e,t,n){if(gt&&Ue){let r=$n.get(e);r||$n.set(e,r=new Map);let l=r.get(n);l||r.set(n,l=Ir()),vl(l)}}function vl(e,t){let n=!1;kt<=er?bl(e)||(e.n|=mt,n=!Cl(e)):n=!e.has(Ue),n&&(e.add(Ue),Ue.deps.push(e))}function ot(e,t,n,r,l,s){const o=$n.get(e);if(!o)return;let i=[];if(t==="clear")i=[...o.values()];else if(n==="length"&&j(e)){const u=hl(r);o.forEach((d,h)=>{(h==="length"||h>=u)&&i.push(d)})}else switch(n!==void 0&&i.push(o.get(n)),t){case"add":j(e)?yr(n)&&i.push(o.get("length")):(i.push(o.get(Tt)),Qt(e)&&i.push(o.get(tr)));break;case"delete":j(e)||(i.push(o.get(Tt)),Qt(e)&&i.push(o.get(tr)));break;case"set":Qt(e)&&i.push(o.get(Tt));break}if(i.length===1)i[0]&&nr(i[0]);else{const u=[];for(const d of i)d&&u.push(...d);nr(Ir(u))}}function nr(e,t){const n=j(e)?e:[...e];for(const r of n)r.computed&&as(r);for(const r of n)r.computed||as(r)}function as(e,t){(e!==Ue||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const xo=Pr("__proto__,__v_isRef,__isVue"),pl=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(Or)),zo=Xr(),Zo=Xr(!1,!0),So=Xr(!0),cs=ko();function ko(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...n){const r=ee(this);for(let s=0,o=this.length;s<o;s++)Xe(r,"get",s+"");const l=r[t](...n);return l===-1||l===!1?r[t](...n.map(ee)):l}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...n){Kt();const r=ee(this)[t].apply(this,n);return xt(),r}}),e}function Xr(e=!1,t=!1){return function(r,l,s){if(l==="__v_isReactive")return!e;if(l==="__v_isReadonly")return e;if(l==="__v_isShallow")return t;if(l==="__v_raw"&&s===(e?t?da:Ll:t?Pl:Bl).get(r))return r;const o=j(r);if(!e&&o&&J(cs,l))return Reflect.get(cs,l,s);const i=Reflect.get(r,l,s);return(Or(l)?pl.has(l):xo(l))||(e||Xe(r,"get",l),t)?i:ve(i)?o&&yr(l)?i:i.value:oe(i)?e?Dl(i):Qr(i):i}}const Jo=wl(),_o=wl(!0);function wl(e=!1){return function(n,r,l,s){let o=n[r];if(Wt(o)&&ve(o)&&!ve(l))return!1;if(!e&&(!Pn(l)&&!Wt(l)&&(o=ee(o),l=ee(l)),!j(n)&&ve(o)&&!ve(l)))return o.value=l,!0;const i=j(n)&&yr(r)?Number(r)<n.length:J(n,r),u=Reflect.set(n,r,l,s);return n===ee(s)&&(i?nn(l,o)&&ot(n,"set",r,l):ot(n,"add",r,l)),u}}function $o(e,t){const n=J(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&n&&ot(e,"delete",t,void 0),r}function ea(e,t){const n=Reflect.has(e,t);return(!Or(t)||!pl.has(t))&&Xe(e,"has",t),n}function ta(e){return Xe(e,"iterate",j(e)?"length":Tt),Reflect.ownKeys(e)}const El={get:zo,set:Jo,deleteProperty:$o,has:ea,ownKeys:ta},na={get:So,set(e,t){return!0},deleteProperty(e,t){return!0}},ra=Ee({},El,{get:Zo,set:_o}),qr=e=>e,In=e=>Reflect.getPrototypeOf(e);function dn(e,t,n=!1,r=!1){e=e.__v_raw;const l=ee(e),s=ee(t);n||(t!==s&&Xe(l,"get",t),Xe(l,"get",s));const{has:o}=In(l),i=r?qr:n?Mr:rn;if(o.call(l,t))return i(e.get(t));if(o.call(l,s))return i(e.get(s));e!==l&&e.get(t)}function gn(e,t=!1){const n=this.__v_raw,r=ee(n),l=ee(e);return t||(e!==l&&Xe(r,"has",e),Xe(r,"has",l)),e===l?n.has(e):n.has(e)||n.has(l)}function hn(e,t=!1){return e=e.__v_raw,!t&&Xe(ee(e),"iterate",Tt),Reflect.get(e,"size",e)}function is(e){e=ee(e);const t=ee(this);return In(t).has.call(t,e)||(t.add(e),ot(t,"add",e,e)),this}function us(e,t){t=ee(t);const n=ee(this),{has:r,get:l}=In(n);let s=r.call(n,e);s||(e=ee(e),s=r.call(n,e));const o=l.call(n,e);return n.set(e,t),s?nn(t,o)&&ot(n,"set",e,t):ot(n,"add",e,t),this}function fs(e){const t=ee(this),{has:n,get:r}=In(t);let l=n.call(t,e);l||(e=ee(e),l=n.call(t,e)),r&&r.call(t,e);const s=t.delete(e);return l&&ot(t,"delete",e,void 0),s}function ds(){const e=ee(this),t=e.size!==0,n=e.clear();return t&&ot(e,"clear",void 0,void 0),n}function mn(e,t){return function(r,l){const s=this,o=s.__v_raw,i=ee(o),u=t?qr:e?Mr:rn;return!e&&Xe(i,"iterate",Tt),o.forEach((d,h)=>r.call(l,u(d),u(h),s))}}function Cn(e,t,n){return function(...r){const l=this.__v_raw,s=ee(l),o=Qt(s),i=e==="entries"||e===Symbol.iterator&&o,u=e==="keys"&&o,d=l[e](...r),h=n?qr:t?Mr:rn;return!t&&Xe(s,"iterate",u?tr:Tt),{next(){const{value:v,done:A}=d.next();return A?{value:v,done:A}:{value:i?[h(v[0]),h(v[1])]:h(v),done:A}},[Symbol.iterator](){return this}}}}function ut(e){return function(...t){return e==="delete"?!1:this}}function sa(){const e={get(s){return dn(this,s)},get size(){return hn(this)},has:gn,add:is,set:us,delete:fs,clear:ds,forEach:mn(!1,!1)},t={get(s){return dn(this,s,!1,!0)},get size(){return hn(this)},has:gn,add:is,set:us,delete:fs,clear:ds,forEach:mn(!1,!0)},n={get(s){return dn(this,s,!0)},get size(){return hn(this,!0)},has(s){return gn.call(this,s,!0)},add:ut("add"),set:ut("set"),delete:ut("delete"),clear:ut("clear"),forEach:mn(!0,!1)},r={get(s){return dn(this,s,!0,!0)},get size(){return hn(this,!0)},has(s){return gn.call(this,s,!0)},add:ut("add"),set:ut("set"),delete:ut("delete"),clear:ut("clear"),forEach:mn(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(s=>{e[s]=Cn(s,!1,!1),n[s]=Cn(s,!0,!1),t[s]=Cn(s,!1,!0),r[s]=Cn(s,!0,!0)}),[e,n,t,r]}const[la,oa,aa,ca]=sa();function Hr(e,t){const n=t?e?ca:aa:e?oa:la;return(r,l,s)=>l==="__v_isReactive"?!e:l==="__v_isReadonly"?e:l==="__v_raw"?r:Reflect.get(J(n,l)&&l in r?n:r,l,s)}const ia={get:Hr(!1,!1)},ua={get:Hr(!1,!0)},fa={get:Hr(!0,!1)},Bl=new WeakMap,Pl=new WeakMap,Ll=new WeakMap,da=new WeakMap;function ga(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function ha(e){return e.__v_skip||!Object.isExtensible(e)?0:ga(Mo(e))}function Qr(e){return Wt(e)?e:Vr(e,!1,El,ia,Bl)}function ma(e){return Vr(e,!1,ra,ua,Pl)}function Dl(e){return Vr(e,!0,na,fa,Ll)}function Vr(e,t,n,r,l){if(!oe(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const s=l.get(e);if(s)return s;const o=ha(e);if(o===0)return e;const i=new Proxy(e,o===2?r:n);return l.set(e,i),i}function Vt(e){return Wt(e)?Vt(e.__v_raw):!!(e&&e.__v_isReactive)}function Wt(e){return!!(e&&e.__v_isReadonly)}function Pn(e){return!!(e&&e.__v_isShallow)}function Nl(e){return Vt(e)||Wt(e)}function ee(e){const t=e&&e.__v_raw;return t?ee(t):e}function Tl(e){return Bn(e,"__v_skip",!0),e}const rn=e=>oe(e)?Qr(e):e,Mr=e=>oe(e)?Dl(e):e;function Ol(e){gt&&Ue&&(e=ee(e),vl(e.dep||(e.dep=Ir())))}function yl(e,t){e=ee(e),e.dep&&nr(e.dep)}function ve(e){return!!(e&&e.__v_isRef===!0)}function et(e){return Il(e,!1)}function Ca(e){return Il(e,!0)}function Il(e,t){return ve(e)?e:new ba(e,t)}class ba{constructor(t,n){this.__v_isShallow=n,this.dep=void 0,this.__v_isRef=!0,this._rawValue=n?t:ee(t),this._value=n?t:rn(t)}get value(){return Ol(this),this._value}set value(t){const n=this.__v_isShallow||Pn(t)||Wt(t);t=n?t:ee(t),nn(t,this._rawValue)&&(this._rawValue=t,this._value=n?t:rn(t),yl(this))}}function Aa(e){return ve(e)?e.value:e}const va={get:(e,t,n)=>Aa(Reflect.get(e,t,n)),set:(e,t,n,r)=>{const l=e[t];return ve(l)&&!ve(n)?(l.value=n,!0):Reflect.set(e,t,n,r)}};function Fl(e){return Vt(e)?e:new Proxy(e,va)}var Xl;class pa{constructor(t,n,r,l){this._setter=n,this.dep=void 0,this.__v_isRef=!0,this[Xl]=!1,this._dirty=!0,this.effect=new Fr(t,()=>{this._dirty||(this._dirty=!0,yl(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!l,this.__v_isReadonly=r}get value(){const t=ee(this);return Ol(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}Xl="__v_isReadonly";function wa(e,t,n=!1){let r,l;const s=x(e);return s?(r=e,l=Re):(r=e.get,l=e.set),new pa(r,l,s||!l,n)}function ht(e,t,n,r){let l;try{l=r?e(...r):e()}catch(s){Fn(s,t,n)}return l}function Ye(e,t,n,r){if(x(e)){const s=ht(e,t,n,r);return s&&fl(s)&&s.catch(o=>{Fn(o,t,n)}),s}const l=[];for(let s=0;s<e.length;s++)l.push(Ye(e[s],t,n,r));return l}function Fn(e,t,n,r=!0){const l=t?t.vnode:null;if(t){let s=t.parent;const o=t.proxy,i=n;for(;s;){const d=s.ec;if(d){for(let h=0;h<d.length;h++)if(d[h](e,o,i)===!1)return}s=s.parent}const u=t.appContext.config.errorHandler;if(u){ht(u,null,10,[e,o,i]);return}}Ea(e,n,l,r)}function Ea(e,t,n,r=!0){console.error(e)}let sn=!1,rr=!1;const we=[];let tt=0;const Mt=[];let st=null,Lt=0;const ql=Promise.resolve();let Yr=null;function Ba(e){const t=Yr||ql;return e?t.then(this?e.bind(this):e):t}function Pa(e){let t=tt+1,n=we.length;for(;t<n;){const r=t+n>>>1;ln(we[r])<e?t=r+1:n=r}return t}function Wr(e){(!we.length||!we.includes(e,sn&&e.allowRecurse?tt+1:tt))&&(e.id==null?we.push(e):we.splice(Pa(e.id),0,e),Hl())}function Hl(){!sn&&!rr&&(rr=!0,Yr=ql.then(Vl))}function La(e){const t=we.indexOf(e);t>tt&&we.splice(t,1)}function Da(e){j(e)?Mt.push(...e):(!st||!st.includes(e,e.allowRecurse?Lt+1:Lt))&&Mt.push(e),Hl()}function gs(e,t=sn?tt+1:0){for(;t<we.length;t++){const n=we[t];n&&n.pre&&(we.splice(t,1),t--,n())}}function Ql(e){if(Mt.length){const t=[...new Set(Mt)];if(Mt.length=0,st){st.push(...t);return}for(st=t,st.sort((n,r)=>ln(n)-ln(r)),Lt=0;Lt<st.length;Lt++)st[Lt]();st=null,Lt=0}}const ln=e=>e.id==null?1/0:e.id,Na=(e,t)=>{const n=ln(e)-ln(t);if(n===0){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return n};function Vl(e){rr=!1,sn=!0,we.sort(Na);const t=Re;try{for(tt=0;tt<we.length;tt++){const n=we[tt];n&&n.active!==!1&&ht(n,null,14)}}finally{tt=0,we.length=0,Ql(),sn=!1,Yr=null,(we.length||Mt.length)&&Vl()}}function Ta(e,t,...n){if(e.isUnmounted)return;const r=e.vnode.props||le;let l=n;const s=t.startsWith("update:"),o=s&&t.slice(7);if(o&&o in r){const h=`${o==="modelValue"?"model":o}Modifiers`,{number:v,trim:A}=r[h]||le;A&&(l=n.map(D=>be(D)?D.trim():D)),v&&(l=n.map(hl))}let i,u=r[i=Rn(t)]||r[i=Rn(nt(t))];!u&&s&&(u=r[i=Rn(Rt(t))]),u&&Ye(u,e,6,l);const d=r[i+"Once"];if(d){if(!e.emitted)e.emitted={};else if(e.emitted[i])return;e.emitted[i]=!0,Ye(d,e,6,l)}}function Ml(e,t,n=!1){const r=t.emitsCache,l=r.get(e);if(l!==void 0)return l;const s=e.emits;let o={},i=!1;if(!x(e)){const u=d=>{const h=Ml(d,t,!0);h&&(i=!0,Ee(o,h))};!n&&t.mixins.length&&t.mixins.forEach(u),e.extends&&u(e.extends),e.mixins&&e.mixins.forEach(u)}return!s&&!i?(oe(e)&&r.set(e,null),null):(j(s)?s.forEach(u=>o[u]=null):Ee(o,s),oe(e)&&r.set(e,o),o)}function Xn(e,t){return!e||!Nn(t)?!1:(t=t.slice(2).replace(/Once$/,""),J(e,t[0].toLowerCase()+t.slice(1))||J(e,Rt(t))||J(e,t))}let Me=null,qn=null;function Ln(e){const t=Me;return Me=e,qn=e&&e.type.__scopeId||null,t}function Yl(e){qn=e}function Wl(){qn=null}function Oa(e,t=Me,n){if(!t||e._n)return e;const r=(...l)=>{r._d&&Bs(-1);const s=Ln(t);let o;try{o=e(...l)}finally{Ln(s),r._d&&Bs(1)}return o};return r._n=!0,r._c=!0,r._d=!0,r}function xn(e){const{type:t,vnode:n,proxy:r,withProxy:l,props:s,propsOptions:[o],slots:i,attrs:u,emit:d,render:h,renderCache:v,data:A,setupState:D,ctx:F,inheritAttrs:T}=e;let X,C;const N=Ln(e);try{if(n.shapeFlag&4){const w=l||r;X=_e(h.call(w,w,v,s,D,A,F)),C=u}else{const w=t;X=_e(w.length>1?w(s,{attrs:u,slots:i,emit:d}):w(s,null)),C=t.props?u:ya(u)}}catch(w){$t.length=0,Fn(w,e,1),X=de(lt)}let P=X;if(C&&T!==!1){const w=Object.keys(C),{shapeFlag:B}=P;w.length&&B&7&&(o&&w.some(Nr)&&(C=Ia(C,o)),P=Ct(P,C))}return n.dirs&&(P=Ct(P),P.dirs=P.dirs?P.dirs.concat(n.dirs):n.dirs),n.transition&&(P.transition=n.transition),X=P,Ln(N),X}const ya=e=>{let t;for(const n in e)(n==="class"||n==="style"||Nn(n))&&((t||(t={}))[n]=e[n]);return t},Ia=(e,t)=>{const n={};for(const r in e)(!Nr(r)||!(r.slice(9)in t))&&(n[r]=e[r]);return n};function Fa(e,t,n){const{props:r,children:l,component:s}=e,{props:o,children:i,patchFlag:u}=t,d=s.emitsOptions;if(t.dirs||t.transition)return!0;if(n&&u>=0){if(u&1024)return!0;if(u&16)return r?hs(r,o,d):!!o;if(u&8){const h=t.dynamicProps;for(let v=0;v<h.length;v++){const A=h[v];if(o[A]!==r[A]&&!Xn(d,A))return!0}}}else return(l||i)&&(!i||!i.$stable)?!0:r===o?!1:r?o?hs(r,o,d):!0:!!o;return!1}function hs(e,t,n){const r=Object.keys(t);if(r.length!==Object.keys(e).length)return!0;for(let l=0;l<r.length;l++){const s=r[l];if(t[s]!==e[s]&&!Xn(n,s))return!0}return!1}function Xa({vnode:e,parent:t},n){for(;t&&t.subTree===e;)(e=t.vnode).el=n,t=t.parent}const qa=e=>e.__isSuspense;function Ha(e,t){t&&t.pendingBranch?j(e)?t.effects.push(...e):t.effects.push(e):Da(e)}function Qa(e,t){if(me){let n=me.provides;const r=me.parent&&me.parent.provides;r===n&&(n=me.provides=Object.create(r)),n[e]=t}}function Jt(e,t,n=!1){const r=me||Me;if(r){const l=r.parent==null?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides;if(l&&e in l)return l[e];if(arguments.length>1)return n&&x(t)?t.call(r.proxy):t}}const bn={};function Yt(e,t,n){return Ul(e,t,n)}function Ul(e,t,{immediate:n,deep:r,flush:l,onTrack:s,onTrigger:o}=le){const i=me;let u,d=!1,h=!1;if(ve(e)?(u=()=>e.value,d=Pn(e)):Vt(e)?(u=()=>e,r=!0):j(e)?(h=!0,d=e.some(P=>Vt(P)||Pn(P)),u=()=>e.map(P=>{if(ve(P))return P.value;if(Vt(P))return It(P);if(x(P))return ht(P,i,2)})):x(e)?t?u=()=>ht(e,i,2):u=()=>{if(!(i&&i.isUnmounted))return v&&v(),Ye(e,i,3,[A])}:u=Re,t&&r){const P=u;u=()=>It(P())}let v,A=P=>{v=C.onStop=()=>{ht(P,i,4)}},D;if(an)if(A=Re,t?n&&Ye(t,i,3,[u(),h?[]:void 0,A]):u(),l==="sync"){const P=Fc();D=P.__watcherHandles||(P.__watcherHandles=[])}else return Re;let F=h?new Array(e.length).fill(bn):bn;const T=()=>{if(C.active)if(t){const P=C.run();(r||d||(h?P.some((w,B)=>nn(w,F[B])):nn(P,F)))&&(v&&v(),Ye(t,i,3,[P,F===bn?void 0:h&&F[0]===bn?[]:F,A]),F=P)}else C.run()};T.allowRecurse=!!t;let X;l==="sync"?X=T:l==="post"?X=()=>Oe(T,i&&i.suspense):(T.pre=!0,i&&(T.id=i.uid),X=()=>Wr(T));const C=new Fr(u,X);t?n?T():F=C.run():l==="post"?Oe(C.run.bind(C),i&&i.suspense):C.run();const N=()=>{C.stop(),i&&i.scope&&Tr(i.scope.effects,C)};return D&&D.push(N),N}function Va(e,t,n){const r=this.proxy,l=be(e)?e.includes(".")?Gl(r,e):()=>r[e]:e.bind(r,r);let s;x(t)?s=t:(s=t.handler,n=t);const o=me;Gt(this);const i=Ul(l,s.bind(r),n);return o?Gt(o):Ot(),i}function Gl(e,t){const n=t.split(".");return()=>{let r=e;for(let l=0;l<n.length&&r;l++)r=r[n[l]];return r}}function It(e,t){if(!oe(e)||e.__v_skip||(t=t||new Set,t.has(e)))return e;if(t.add(e),ve(e))It(e.value,t);else if(j(e))for(let n=0;n<e.length;n++)It(e[n],t);else if(ul(e)||Qt(e))e.forEach(n=>{It(n,t)});else if(gl(e))for(const n in e)It(e[n],t);return e}function Ma(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Ur(()=>{e.isMounted=!0}),zl(()=>{e.isUnmounting=!0}),e}const Ve=[Function,Array],Ya={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Ve,onEnter:Ve,onAfterEnter:Ve,onEnterCancelled:Ve,onBeforeLeave:Ve,onLeave:Ve,onAfterLeave:Ve,onLeaveCancelled:Ve,onBeforeAppear:Ve,onAppear:Ve,onAfterAppear:Ve,onAppearCancelled:Ve},setup(e,{slots:t}){const n=Ut(),r=Ma();let l;return()=>{const s=t.default&&Rl(t.default(),!0);if(!s||!s.length)return;let o=s[0];if(s.length>1){for(const T of s)if(T.type!==lt){o=T;break}}const i=ee(e),{mode:u}=i;if(r.isLeaving)return zn(o);const d=ms(o);if(!d)return zn(o);const h=sr(d,i,r,n);lr(d,h);const v=n.subTree,A=v&&ms(v);let D=!1;const{getTransitionKey:F}=d.type;if(F){const T=F();l===void 0?l=T:T!==l&&(l=T,D=!0)}if(A&&A.type!==lt&&(!Dt(d,A)||D)){const T=sr(A,i,r,n);if(lr(A,T),u==="out-in")return r.isLeaving=!0,T.afterLeave=()=>{r.isLeaving=!1,n.update.active!==!1&&n.update()},zn(o);u==="in-out"&&d.type!==lt&&(T.delayLeave=(X,C,N)=>{const P=jl(r,A);P[String(A.key)]=A,X._leaveCb=()=>{C(),X._leaveCb=void 0,delete h.delayedLeave},h.delayedLeave=N})}return o}}},Wa=Ya;function jl(e,t){const{leavingVNodes:n}=e;let r=n.get(t.type);return r||(r=Object.create(null),n.set(t.type,r)),r}function sr(e,t,n,r){const{appear:l,mode:s,persisted:o=!1,onBeforeEnter:i,onEnter:u,onAfterEnter:d,onEnterCancelled:h,onBeforeLeave:v,onLeave:A,onAfterLeave:D,onLeaveCancelled:F,onBeforeAppear:T,onAppear:X,onAfterAppear:C,onAppearCancelled:N}=t,P=String(e.key),w=jl(n,e),B=(Y,U)=>{Y&&Ye(Y,r,9,U)},H=(Y,U)=>{const K=U[1];B(Y,U),j(Y)?Y.every(te=>te.length<=1)&&K():Y.length<=1&&K()},Q={mode:s,persisted:o,beforeEnter(Y){let U=i;if(!n.isMounted)if(l)U=T||i;else return;Y._leaveCb&&Y._leaveCb(!0);const K=w[P];K&&Dt(e,K)&&K.el._leaveCb&&K.el._leaveCb(),B(U,[Y])},enter(Y){let U=u,K=d,te=h;if(!n.isMounted)if(l)U=X||u,K=C||d,te=N||h;else return;let ie=!1;const ae=Y._enterCb=qe=>{ie||(ie=!0,qe?B(te,[Y]):B(K,[Y]),Q.delayedLeave&&Q.delayedLeave(),Y._enterCb=void 0)};U?H(U,[Y,ae]):ae()},leave(Y,U){const K=String(e.key);if(Y._enterCb&&Y._enterCb(!0),n.isUnmounting)return U();B(v,[Y]);let te=!1;const ie=Y._leaveCb=ae=>{te||(te=!0,U(),ae?B(F,[Y]):B(D,[Y]),Y._leaveCb=void 0,w[K]===e&&delete w[K])};w[K]=e,A?H(A,[Y,ie]):ie()},clone(Y){return sr(Y,t,n,r)}};return Q}function zn(e){if(Hn(e))return e=Ct(e),e.children=null,e}function ms(e){return Hn(e)?e.children?e.children[0]:void 0:e}function lr(e,t){e.shapeFlag&6&&e.component?lr(e.component.subTree,t):e.shapeFlag&128?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function Rl(e,t=!1,n){let r=[],l=0;for(let s=0;s<e.length;s++){let o=e[s];const i=n==null?o.key:String(n)+String(o.key!=null?o.key:s);o.type===Fe?(o.patchFlag&128&&l++,r=r.concat(Rl(o.children,t,i))):(t||o.type!==lt)&&r.push(i!=null?Ct(o,{key:i}):o)}if(l>1)for(let s=0;s<r.length;s++)r[s].patchFlag=-2;return r}const wn=e=>!!e.type.__asyncLoader,Hn=e=>e.type.__isKeepAlive;function Ua(e,t){Kl(e,"a",t)}function Ga(e,t){Kl(e,"da",t)}function Kl(e,t,n=me){const r=e.__wdc||(e.__wdc=()=>{let l=n;for(;l;){if(l.isDeactivated)return;l=l.parent}return e()});if(Qn(t,r,n),n){let l=n.parent;for(;l&&l.parent;)Hn(l.parent.vnode)&&ja(r,t,n,l),l=l.parent}}function ja(e,t,n,r){const l=Qn(t,e,r,!0);Gr(()=>{Tr(r[t],l)},n)}function Qn(e,t,n=me,r=!1){if(n){const l=n[e]||(n[e]=[]),s=t.__weh||(t.__weh=(...o)=>{if(n.isUnmounted)return;Kt(),Gt(n);const i=Ye(t,n,e,o);return Ot(),xt(),i});return r?l.unshift(s):l.push(s),s}}const at=e=>(t,n=me)=>(!an||e==="sp")&&Qn(e,(...r)=>t(...r),n),xl=at("bm"),Ur=at("m"),Ra=at("bu"),Ka=at("u"),zl=at("bum"),Gr=at("um"),xa=at("sp"),za=at("rtg"),Za=at("rtc");function Sa(e,t=me){Qn("ec",e,t)}function Et(e,t,n,r){const l=e.dirs,s=t&&t.dirs;for(let o=0;o<l.length;o++){const i=l[o];s&&(i.oldValue=s[o].value);let u=i.dir[r];u&&(Kt(),Ye(u,n,8,[e.el,i,e,t]),xt())}}const Zl="components";function ka(e,t){return _a(Zl,e,!0,t)||e}const Ja=Symbol();function _a(e,t,n=!0,r=!1){const l=Me||me;if(l){const s=l.type;if(e===Zl){const i=Oc(s,!1);if(i&&(i===t||i===nt(t)||i===yn(nt(t))))return s}const o=Cs(l[e]||s[e],t)||Cs(l.appContext[e],t);return!o&&r?s:o}}function Cs(e,t){return e&&(e[t]||e[nt(t)]||e[yn(nt(t))])}const or=e=>e?so(e)?xr(e)||e.proxy:or(e.parent):null,_t=Ee(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>or(e.parent),$root:e=>or(e.root),$emit:e=>e.emit,$options:e=>jr(e),$forceUpdate:e=>e.f||(e.f=()=>Wr(e.update)),$nextTick:e=>e.n||(e.n=Ba.bind(e.proxy)),$watch:e=>Va.bind(e)}),Zn=(e,t)=>e!==le&&!e.__isScriptSetup&&J(e,t),$a={get({_:e},t){const{ctx:n,setupState:r,data:l,props:s,accessCache:o,type:i,appContext:u}=e;let d;if(t[0]!=="$"){const D=o[t];if(D!==void 0)switch(D){case 1:return r[t];case 2:return l[t];case 4:return n[t];case 3:return s[t]}else{if(Zn(r,t))return o[t]=1,r[t];if(l!==le&&J(l,t))return o[t]=2,l[t];if((d=e.propsOptions[0])&&J(d,t))return o[t]=3,s[t];if(n!==le&&J(n,t))return o[t]=4,n[t];ar&&(o[t]=0)}}const h=_t[t];let v,A;if(h)return t==="$attrs"&&Xe(e,"get",t),h(e);if((v=i.__cssModules)&&(v=v[t]))return v;if(n!==le&&J(n,t))return o[t]=4,n[t];if(A=u.config.globalProperties,J(A,t))return A[t]},set({_:e},t,n){const{data:r,setupState:l,ctx:s}=e;return Zn(l,t)?(l[t]=n,!0):r!==le&&J(r,t)?(r[t]=n,!0):J(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(s[t]=n,!0)},has({_:{data:e,setupState:t,accessCache:n,ctx:r,appContext:l,propsOptions:s}},o){let i;return!!n[o]||e!==le&&J(e,o)||Zn(t,o)||(i=s[0])&&J(i,o)||J(r,o)||J(_t,o)||J(l.config.globalProperties,o)},defineProperty(e,t,n){return n.get!=null?e._.accessCache[t]=0:J(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};let ar=!0;function ec(e){const t=jr(e),n=e.proxy,r=e.ctx;ar=!1,t.beforeCreate&&bs(t.beforeCreate,e,"bc");const{data:l,computed:s,methods:o,watch:i,provide:u,inject:d,created:h,beforeMount:v,mounted:A,beforeUpdate:D,updated:F,activated:T,deactivated:X,beforeDestroy:C,beforeUnmount:N,destroyed:P,unmounted:w,render:B,renderTracked:H,renderTriggered:Q,errorCaptured:Y,serverPrefetch:U,expose:K,inheritAttrs:te,components:ie,directives:ae,filters:qe}=t;if(d&&tc(d,r,null,e.appContext.config.unwrapInjectedRef),o)for(const S in o){const k=o[S];x(k)&&(r[S]=k.bind(n))}if(l){const S=l.call(n,n);oe(S)&&(e.data=Qr(S))}if(ar=!0,s)for(const S in s){const k=s[S],De=x(k)?k.bind(n,n):x(k.get)?k.get.bind(n,n):Re,Ke=!x(k)&&x(k.set)?k.set.bind(n):Re,ye=Ge({get:De,set:Ke});Object.defineProperty(r,S,{enumerable:!0,configurable:!0,get:()=>ye.value,set:pe=>ye.value=pe})}if(i)for(const S in i)Sl(i[S],r,n,S);if(u){const S=x(u)?u.call(n):u;Reflect.ownKeys(S).forEach(k=>{Qa(k,S[k])})}h&&bs(h,e,"c");function ne(S,k){j(k)?k.forEach(De=>S(De.bind(n))):k&&S(k.bind(n))}if(ne(xl,v),ne(Ur,A),ne(Ra,D),ne(Ka,F),ne(Ua,T),ne(Ga,X),ne(Sa,Y),ne(Za,H),ne(za,Q),ne(zl,N),ne(Gr,w),ne(xa,U),j(K))if(K.length){const S=e.exposed||(e.exposed={});K.forEach(k=>{Object.defineProperty(S,k,{get:()=>n[k],set:De=>n[k]=De})})}else e.exposed||(e.exposed={});B&&e.render===Re&&(e.render=B),te!=null&&(e.inheritAttrs=te),ie&&(e.components=ie),ae&&(e.directives=ae)}function tc(e,t,n=Re,r=!1){j(e)&&(e=cr(e));for(const l in e){const s=e[l];let o;oe(s)?"default"in s?o=Jt(s.from||l,s.default,!0):o=Jt(s.from||l):o=Jt(s),ve(o)&&r?Object.defineProperty(t,l,{enumerable:!0,configurable:!0,get:()=>o.value,set:i=>o.value=i}):t[l]=o}}function bs(e,t,n){Ye(j(e)?e.map(r=>r.bind(t.proxy)):e.bind(t.proxy),t,n)}function Sl(e,t,n,r){const l=r.includes(".")?Gl(n,r):()=>n[r];if(be(e)){const s=t[e];x(s)&&Yt(l,s)}else if(x(e))Yt(l,e.bind(n));else if(oe(e))if(j(e))e.forEach(s=>Sl(s,t,n,r));else{const s=x(e.handler)?e.handler.bind(n):t[e.handler];x(s)&&Yt(l,s,e)}}function jr(e){const t=e.type,{mixins:n,extends:r}=t,{mixins:l,optionsCache:s,config:{optionMergeStrategies:o}}=e.appContext,i=s.get(t);let u;return i?u=i:!l.length&&!n&&!r?u=t:(u={},l.length&&l.forEach(d=>Dn(u,d,o,!0)),Dn(u,t,o)),oe(t)&&s.set(t,u),u}function Dn(e,t,n,r=!1){const{mixins:l,extends:s}=t;s&&Dn(e,s,n,!0),l&&l.forEach(o=>Dn(e,o,n,!0));for(const o in t)if(!(r&&o==="expose")){const i=nc[o]||n&&n[o];e[o]=i?i(e[o],t[o]):t[o]}return e}const nc={data:As,props:Pt,emits:Pt,methods:Pt,computed:Pt,beforeCreate:Pe,created:Pe,beforeMount:Pe,mounted:Pe,beforeUpdate:Pe,updated:Pe,beforeDestroy:Pe,beforeUnmount:Pe,destroyed:Pe,unmounted:Pe,activated:Pe,deactivated:Pe,errorCaptured:Pe,serverPrefetch:Pe,components:Pt,directives:Pt,watch:sc,provide:As,inject:rc};function As(e,t){return t?e?function(){return Ee(x(e)?e.call(this,this):e,x(t)?t.call(this,this):t)}:t:e}function rc(e,t){return Pt(cr(e),cr(t))}function cr(e){if(j(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function Pe(e,t){return e?[...new Set([].concat(e,t))]:t}function Pt(e,t){return e?Ee(Ee(Object.create(null),e),t):t}function sc(e,t){if(!e)return t;if(!t)return e;const n=Ee(Object.create(null),e);for(const r in t)n[r]=Pe(e[r],t[r]);return n}function lc(e,t,n,r=!1){const l={},s={};Bn(s,Yn,1),e.propsDefaults=Object.create(null),kl(e,t,l,s);for(const o in e.propsOptions[0])o in l||(l[o]=void 0);n?e.props=r?l:ma(l):e.type.props?e.props=l:e.props=s,e.attrs=s}function oc(e,t,n,r){const{props:l,attrs:s,vnode:{patchFlag:o}}=e,i=ee(l),[u]=e.propsOptions;let d=!1;if((r||o>0)&&!(o&16)){if(o&8){const h=e.vnode.dynamicProps;for(let v=0;v<h.length;v++){let A=h[v];if(Xn(e.emitsOptions,A))continue;const D=t[A];if(u)if(J(s,A))D!==s[A]&&(s[A]=D,d=!0);else{const F=nt(A);l[F]=ir(u,i,F,D,e,!1)}else D!==s[A]&&(s[A]=D,d=!0)}}}else{kl(e,t,l,s)&&(d=!0);let h;for(const v in i)(!t||!J(t,v)&&((h=Rt(v))===v||!J(t,h)))&&(u?n&&(n[v]!==void 0||n[h]!==void 0)&&(l[v]=ir(u,i,v,void 0,e,!0)):delete l[v]);if(s!==i)for(const v in s)(!t||!J(t,v))&&(delete s[v],d=!0)}d&&ot(e,"set","$attrs")}function kl(e,t,n,r){const[l,s]=e.propsOptions;let o=!1,i;if(t)for(let u in t){if(pn(u))continue;const d=t[u];let h;l&&J(l,h=nt(u))?!s||!s.includes(h)?n[h]=d:(i||(i={}))[h]=d:Xn(e.emitsOptions,u)||(!(u in r)||d!==r[u])&&(r[u]=d,o=!0)}if(s){const u=ee(n),d=i||le;for(let h=0;h<s.length;h++){const v=s[h];n[v]=ir(l,u,v,d[v],e,!J(d,v))}}return o}function ir(e,t,n,r,l,s){const o=e[n];if(o!=null){const i=J(o,"default");if(i&&r===void 0){const u=o.default;if(o.type!==Function&&x(u)){const{propsDefaults:d}=l;n in d?r=d[n]:(Gt(l),r=d[n]=u.call(null,t),Ot())}else r=u}o[0]&&(s&&!i?r=!1:o[1]&&(r===""||r===Rt(n))&&(r=!0))}return r}function Jl(e,t,n=!1){const r=t.propsCache,l=r.get(e);if(l)return l;const s=e.props,o={},i=[];let u=!1;if(!x(e)){const h=v=>{u=!0;const[A,D]=Jl(v,t,!0);Ee(o,A),D&&i.push(...D)};!n&&t.mixins.length&&t.mixins.forEach(h),e.extends&&h(e.extends),e.mixins&&e.mixins.forEach(h)}if(!s&&!u)return oe(e)&&r.set(e,Ht),Ht;if(j(s))for(let h=0;h<s.length;h++){const v=nt(s[h]);vs(v)&&(o[v]=le)}else if(s)for(const h in s){const v=nt(h);if(vs(v)){const A=s[h],D=o[v]=j(A)||x(A)?{type:A}:Object.assign({},A);if(D){const F=Es(Boolean,D.type),T=Es(String,D.type);D[0]=F>-1,D[1]=T<0||F<T,(F>-1||J(D,"default"))&&i.push(v)}}}const d=[o,i];return oe(e)&&r.set(e,d),d}function vs(e){return e[0]!=="$"}function ps(e){const t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:e===null?"null":""}function ws(e,t){return ps(e)===ps(t)}function Es(e,t){return j(t)?t.findIndex(n=>ws(n,e)):x(t)&&ws(t,e)?0:-1}const _l=e=>e[0]==="_"||e==="$stable",Rr=e=>j(e)?e.map(_e):[_e(e)],ac=(e,t,n)=>{if(t._n)return t;const r=Oa((...l)=>Rr(t(...l)),n);return r._c=!1,r},$l=(e,t,n)=>{const r=e._ctx;for(const l in e){if(_l(l))continue;const s=e[l];if(x(s))t[l]=ac(l,s,r);else if(s!=null){const o=Rr(s);t[l]=()=>o}}},eo=(e,t)=>{const n=Rr(t);e.slots.default=()=>n},cc=(e,t)=>{if(e.vnode.shapeFlag&32){const n=t._;n?(e.slots=ee(t),Bn(t,"_",n)):$l(t,e.slots={})}else e.slots={},t&&eo(e,t);Bn(e.slots,Yn,1)},ic=(e,t,n)=>{const{vnode:r,slots:l}=e;let s=!0,o=le;if(r.shapeFlag&32){const i=t._;i?n&&i===1?s=!1:(Ee(l,t),!n&&i===1&&delete l._):(s=!t.$stable,$l(t,l)),o=t}else t&&(eo(e,t),o={default:1});if(s)for(const i in l)!_l(i)&&!(i in o)&&delete l[i]};function to(){return{app:null,config:{isNativeTag:Ho,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let uc=0;function fc(e,t){return function(r,l=null){x(r)||(r=Object.assign({},r)),l!=null&&!oe(l)&&(l=null);const s=to(),o=new Set;let i=!1;const u=s.app={_uid:uc++,_component:r,_props:l,_container:null,_context:s,_instance:null,version:Xc,get config(){return s.config},set config(d){},use(d,...h){return o.has(d)||(d&&x(d.install)?(o.add(d),d.install(u,...h)):x(d)&&(o.add(d),d(u,...h))),u},mixin(d){return s.mixins.includes(d)||s.mixins.push(d),u},component(d,h){return h?(s.components[d]=h,u):s.components[d]},directive(d,h){return h?(s.directives[d]=h,u):s.directives[d]},mount(d,h,v){if(!i){const A=de(r,l);return A.appContext=s,h&&t?t(A,d):e(A,d,v),i=!0,u._container=d,d.__vue_app__=u,xr(A.component)||A.component.proxy}},unmount(){i&&(e(null,u._container),delete u._container.__vue_app__)},provide(d,h){return s.provides[d]=h,u}};return u}}function ur(e,t,n,r,l=!1){if(j(e)){e.forEach((A,D)=>ur(A,t&&(j(t)?t[D]:t),n,r,l));return}if(wn(r)&&!l)return;const s=r.shapeFlag&4?xr(r.component)||r.component.proxy:r.el,o=l?null:s,{i,r:u}=e,d=t&&t.r,h=i.refs===le?i.refs={}:i.refs,v=i.setupState;if(d!=null&&d!==u&&(be(d)?(h[d]=null,J(v,d)&&(v[d]=null)):ve(d)&&(d.value=null)),x(u))ht(u,i,12,[o,h]);else{const A=be(u),D=ve(u);if(A||D){const F=()=>{if(e.f){const T=A?J(v,u)?v[u]:h[u]:u.value;l?j(T)&&Tr(T,s):j(T)?T.includes(s)||T.push(s):A?(h[u]=[s],J(v,u)&&(v[u]=h[u])):(u.value=[s],e.k&&(h[e.k]=u.value))}else A?(h[u]=o,J(v,u)&&(v[u]=o)):D&&(u.value=o,e.k&&(h[e.k]=o))};o?(F.id=-1,Oe(F,n)):F()}}}const Oe=Ha;function dc(e){return gc(e)}function gc(e,t){const n=Uo();n.__VUE__=!0;const{insert:r,remove:l,patchProp:s,createElement:o,createText:i,createComment:u,setText:d,setElementText:h,parentNode:v,nextSibling:A,setScopeId:D=Re,insertStaticContent:F}=e,T=(g,a,c,f=null,m=null,E=null,O=!1,y=null,I=!!a.dynamicChildren)=>{if(g===a)return;g&&!Dt(g,a)&&(f=xe(g),pe(g,m,E,!0),g=null),a.patchFlag===-2&&(I=!1,a.dynamicChildren=null);const{type:L,ref:b,shapeFlag:p}=a;switch(L){case un:X(g,a,c,f);break;case lt:C(g,a,c,f);break;case Sn:g==null&&N(a,c,f,O);break;case Fe:ie(g,a,c,f,m,E,O,y,I);break;default:p&1?B(g,a,c,f,m,E,O,y,I):p&6?ae(g,a,c,f,m,E,O,y,I):(p&64||p&128)&&L.process(g,a,c,f,m,E,O,y,I,Ne)}b!=null&&m&&ur(b,g&&g.ref,E,a||g,!a)},X=(g,a,c,f)=>{if(g==null)r(a.el=i(a.children),c,f);else{const m=a.el=g.el;a.children!==g.children&&d(m,a.children)}},C=(g,a,c,f)=>{g==null?r(a.el=u(a.children||""),c,f):a.el=g.el},N=(g,a,c,f)=>{[g.el,g.anchor]=F(g.children,a,c,f,g.el,g.anchor)},P=({el:g,anchor:a},c,f)=>{let m;for(;g&&g!==a;)m=A(g),r(g,c,f),g=m;r(a,c,f)},w=({el:g,anchor:a})=>{let c;for(;g&&g!==a;)c=A(g),l(g),g=c;l(a)},B=(g,a,c,f,m,E,O,y,I)=>{O=O||a.type==="svg",g==null?H(a,c,f,m,E,O,y,I):U(g,a,m,E,O,y,I)},H=(g,a,c,f,m,E,O,y)=>{let I,L;const{type:b,props:p,shapeFlag:V,transition:M,dirs:R}=g;if(I=g.el=o(g.type,E,p&&p.is,p),V&8?h(I,g.children):V&16&&Y(g.children,I,null,f,m,E&&b!=="foreignObject",O,y),R&&Et(g,null,f,"created"),p){for(const z in p)z!=="value"&&!pn(z)&&s(I,z,null,p[z],E,g.children,f,m,Be);"value"in p&&s(I,"value",null,p.value),(L=p.onVnodeBeforeMount)&&Se(L,f,g)}Q(I,g,g.scopeId,O,f),R&&Et(g,null,f,"beforeMount");const $=(!m||m&&!m.pendingBranch)&&M&&!M.persisted;$&&M.beforeEnter(I),r(I,a,c),((L=p&&p.onVnodeMounted)||$||R)&&Oe(()=>{L&&Se(L,f,g),$&&M.enter(I),R&&Et(g,null,f,"mounted")},m)},Q=(g,a,c,f,m)=>{if(c&&D(g,c),f)for(let E=0;E<f.length;E++)D(g,f[E]);if(m){let E=m.subTree;if(a===E){const O=m.vnode;Q(g,O,O.scopeId,O.slotScopeIds,m.parent)}}},Y=(g,a,c,f,m,E,O,y,I=0)=>{for(let L=I;L<g.length;L++){const b=g[L]=y?dt(g[L]):_e(g[L]);T(null,b,a,c,f,m,E,O,y)}},U=(g,a,c,f,m,E,O)=>{const y=a.el=g.el;let{patchFlag:I,dynamicChildren:L,dirs:b}=a;I|=g.patchFlag&16;const p=g.props||le,V=a.props||le;let M;c&&Bt(c,!1),(M=V.onVnodeBeforeUpdate)&&Se(M,c,a,g),b&&Et(a,g,c,"beforeUpdate"),c&&Bt(c,!0);const R=m&&a.type!=="foreignObject";if(L?K(g.dynamicChildren,L,y,c,f,R,E):O||k(g,a,y,null,c,f,R,E,!1),I>0){if(I&16)te(y,a,p,V,c,f,m);else if(I&2&&p.class!==V.class&&s(y,"class",null,V.class,m),I&4&&s(y,"style",p.style,V.style,m),I&8){const $=a.dynamicProps;for(let z=0;z<$.length;z++){const ce=$[z],Qe=p[ce],yt=V[ce];(yt!==Qe||ce==="value")&&s(y,ce,Qe,yt,m,g.children,c,f,Be)}}I&1&&g.children!==a.children&&h(y,a.children)}else!O&&L==null&&te(y,a,p,V,c,f,m);((M=V.onVnodeUpdated)||b)&&Oe(()=>{M&&Se(M,c,a,g),b&&Et(a,g,c,"updated")},f)},K=(g,a,c,f,m,E,O)=>{for(let y=0;y<a.length;y++){const I=g[y],L=a[y],b=I.el&&(I.type===Fe||!Dt(I,L)||I.shapeFlag&70)?v(I.el):c;T(I,L,b,null,f,m,E,O,!0)}},te=(g,a,c,f,m,E,O)=>{if(c!==f){if(c!==le)for(const y in c)!pn(y)&&!(y in f)&&s(g,y,c[y],null,O,a.children,m,E,Be);for(const y in f){if(pn(y))continue;const I=f[y],L=c[y];I!==L&&y!=="value"&&s(g,y,L,I,O,a.children,m,E,Be)}"value"in f&&s(g,"value",c.value,f.value)}},ie=(g,a,c,f,m,E,O,y,I)=>{const L=a.el=g?g.el:i(""),b=a.anchor=g?g.anchor:i("");let{patchFlag:p,dynamicChildren:V,slotScopeIds:M}=a;M&&(y=y?y.concat(M):M),g==null?(r(L,c,f),r(b,c,f),Y(a.children,c,b,m,E,O,y,I)):p>0&&p&64&&V&&g.dynamicChildren?(K(g.dynamicChildren,V,c,m,E,O,y),(a.key!=null||m&&a===m.subTree)&&no(g,a,!0)):k(g,a,c,b,m,E,O,y,I)},ae=(g,a,c,f,m,E,O,y,I)=>{a.slotScopeIds=y,g==null?a.shapeFlag&512?m.ctx.activate(a,c,f,O,I):qe(a,c,f,m,E,O,I):ct(g,a,I)},qe=(g,a,c,f,m,E,O)=>{const y=g.component=Pc(g,f,m);if(Hn(g)&&(y.ctx.renderer=Ne),Lc(y),y.asyncDep){if(m&&m.registerDep(y,ne),!g.el){const I=y.subTree=de(lt);C(null,I,a,c)}return}ne(y,g,a,c,m,E,O)},ct=(g,a,c)=>{const f=a.component=g.component;if(Fa(g,a,c))if(f.asyncDep&&!f.asyncResolved){S(f,a,c);return}else f.next=a,La(f.update),f.update();else a.el=g.el,f.vnode=a},ne=(g,a,c,f,m,E,O)=>{const y=()=>{if(g.isMounted){let{next:b,bu:p,u:V,parent:M,vnode:R}=g,$=b,z;Bt(g,!1),b?(b.el=R.el,S(g,b,O)):b=R,p&&Kn(p),(z=b.props&&b.props.onVnodeBeforeUpdate)&&Se(z,M,b,R),Bt(g,!0);const ce=xn(g),Qe=g.subTree;g.subTree=ce,T(Qe,ce,v(Qe.el),xe(Qe),g,m,E),b.el=ce.el,$===null&&Xa(g,ce.el),V&&Oe(V,m),(z=b.props&&b.props.onVnodeUpdated)&&Oe(()=>Se(z,M,b,R),m)}else{let b;const{el:p,props:V}=a,{bm:M,m:R,parent:$}=g,z=wn(a);if(Bt(g,!1),M&&Kn(M),!z&&(b=V&&V.onVnodeBeforeMount)&&Se(b,$,a),Bt(g,!0),p&&We){const ce=()=>{g.subTree=xn(g),We(p,g.subTree,g,m,null)};z?a.type.__asyncLoader().then(()=>!g.isUnmounted&&ce()):ce()}else{const ce=g.subTree=xn(g);T(null,ce,c,f,g,m,E),a.el=ce.el}if(R&&Oe(R,m),!z&&(b=V&&V.onVnodeMounted)){const ce=a;Oe(()=>Se(b,$,ce),m)}(a.shapeFlag&256||$&&wn($.vnode)&&$.vnode.shapeFlag&256)&&g.a&&Oe(g.a,m),g.isMounted=!0,a=c=f=null}},I=g.effect=new Fr(y,()=>Wr(L),g.scope),L=g.update=()=>I.run();L.id=g.uid,Bt(g,!0),L()},S=(g,a,c)=>{a.component=g;const f=g.vnode.props;g.vnode=a,g.next=null,oc(g,a.props,f,c),ic(g,a.children,c),Kt(),gs(),xt()},k=(g,a,c,f,m,E,O,y,I=!1)=>{const L=g&&g.children,b=g?g.shapeFlag:0,p=a.children,{patchFlag:V,shapeFlag:M}=a;if(V>0){if(V&128){Ke(L,p,c,f,m,E,O,y,I);return}else if(V&256){De(L,p,c,f,m,E,O,y,I);return}}M&8?(b&16&&Be(L,m,E),p!==L&&h(c,p)):b&16?M&16?Ke(L,p,c,f,m,E,O,y,I):Be(L,m,E,!0):(b&8&&h(c,""),M&16&&Y(p,c,f,m,E,O,y,I))},De=(g,a,c,f,m,E,O,y,I)=>{g=g||Ht,a=a||Ht;const L=g.length,b=a.length,p=Math.min(L,b);let V;for(V=0;V<p;V++){const M=a[V]=I?dt(a[V]):_e(a[V]);T(g[V],M,c,null,m,E,O,y,I)}L>b?Be(g,m,E,!0,!1,p):Y(a,c,f,m,E,O,y,I,p)},Ke=(g,a,c,f,m,E,O,y,I)=>{let L=0;const b=a.length;let p=g.length-1,V=b-1;for(;L<=p&&L<=V;){const M=g[L],R=a[L]=I?dt(a[L]):_e(a[L]);if(Dt(M,R))T(M,R,c,null,m,E,O,y,I);else break;L++}for(;L<=p&&L<=V;){const M=g[p],R=a[V]=I?dt(a[V]):_e(a[V]);if(Dt(M,R))T(M,R,c,null,m,E,O,y,I);else break;p--,V--}if(L>p){if(L<=V){const M=V+1,R=M<b?a[M].el:f;for(;L<=V;)T(null,a[L]=I?dt(a[L]):_e(a[L]),c,R,m,E,O,y,I),L++}}else if(L>V)for(;L<=p;)pe(g[L],m,E,!0),L++;else{const M=L,R=L,$=new Map;for(L=R;L<=V;L++){const Ie=a[L]=I?dt(a[L]):_e(a[L]);Ie.key!=null&&$.set(Ie.key,L)}let z,ce=0;const Qe=V-R+1;let yt=!1,ns=0;const zt=new Array(Qe);for(L=0;L<Qe;L++)zt[L]=0;for(L=M;L<=p;L++){const Ie=g[L];if(ce>=Qe){pe(Ie,m,E,!0);continue}let Ze;if(Ie.key!=null)Ze=$.get(Ie.key);else for(z=R;z<=V;z++)if(zt[z-R]===0&&Dt(Ie,a[z])){Ze=z;break}Ze===void 0?pe(Ie,m,E,!0):(zt[Ze-R]=L+1,Ze>=ns?ns=Ze:yt=!0,T(Ie,a[Ze],c,null,m,E,O,y,I),ce++)}const rs=yt?hc(zt):Ht;for(z=rs.length-1,L=Qe-1;L>=0;L--){const Ie=R+L,Ze=a[Ie],ss=Ie+1<b?a[Ie+1].el:f;zt[L]===0?T(null,Ze,c,ss,m,E,O,y,I):yt&&(z<0||L!==rs[z]?ye(Ze,c,ss,2):z--)}}},ye=(g,a,c,f,m=null)=>{const{el:E,type:O,transition:y,children:I,shapeFlag:L}=g;if(L&6){ye(g.component.subTree,a,c,f);return}if(L&128){g.suspense.move(a,c,f);return}if(L&64){O.move(g,a,c,Ne);return}if(O===Fe){r(E,a,c);for(let p=0;p<I.length;p++)ye(I[p],a,c,f);r(g.anchor,a,c);return}if(O===Sn){P(g,a,c);return}if(f!==2&&L&1&&y)if(f===0)y.beforeEnter(E),r(E,a,c),Oe(()=>y.enter(E),m);else{const{leave:p,delayLeave:V,afterLeave:M}=y,R=()=>r(E,a,c),$=()=>{p(E,()=>{R(),M&&M()})};V?V(E,R,$):$()}else r(E,a,c)},pe=(g,a,c,f=!1,m=!1)=>{const{type:E,props:O,ref:y,children:I,dynamicChildren:L,shapeFlag:b,patchFlag:p,dirs:V}=g;if(y!=null&&ur(y,null,c,g,!0),b&256){a.ctx.deactivate(g);return}const M=b&1&&V,R=!wn(g);let $;if(R&&($=O&&O.onVnodeBeforeUnmount)&&Se($,a,g),b&6)wt(g.component,c,f);else{if(b&128){g.suspense.unmount(c,f);return}M&&Et(g,null,a,"beforeUnmount"),b&64?g.type.remove(g,a,c,m,Ne,f):L&&(E!==Fe||p>0&&p&64)?Be(L,a,c,!1,!0):(E===Fe&&p&384||!m&&b&16)&&Be(I,a,c),f&&pt(g)}(R&&($=O&&O.onVnodeUnmounted)||M)&&Oe(()=>{$&&Se($,a,g),M&&Et(g,null,a,"unmounted")},c)},pt=g=>{const{type:a,el:c,anchor:f,transition:m}=g;if(a===Fe){it(c,f);return}if(a===Sn){w(g);return}const E=()=>{l(c),m&&!m.persisted&&m.afterLeave&&m.afterLeave()};if(g.shapeFlag&1&&m&&!m.persisted){const{leave:O,delayLeave:y}=m,I=()=>O(c,E);y?y(g.el,E,I):I()}else E()},it=(g,a)=>{let c;for(;g!==a;)c=A(g),l(g),g=c;l(a)},wt=(g,a,c)=>{const{bum:f,scope:m,update:E,subTree:O,um:y}=g;f&&Kn(f),m.stop(),E&&(E.active=!1,pe(O,g,a,c)),y&&Oe(y,a),Oe(()=>{g.isUnmounted=!0},a),a&&a.pendingBranch&&!a.isUnmounted&&g.asyncDep&&!g.asyncResolved&&g.suspenseId===a.pendingId&&(a.deps--,a.deps===0&&a.resolve())},Be=(g,a,c,f=!1,m=!1,E=0)=>{for(let O=E;O<g.length;O++)pe(g[O],a,c,f,m)},xe=g=>g.shapeFlag&6?xe(g.component.subTree):g.shapeFlag&128?g.suspense.next():A(g.anchor||g.el),ze=(g,a,c)=>{g==null?a._vnode&&pe(a._vnode,null,null,!0):T(a._vnode||null,g,a,null,null,null,c),gs(),Ql(),a._vnode=g},Ne={p:T,um:pe,m:ye,r:pt,mt:qe,mc:Y,pc:k,pbc:K,n:xe,o:e};let He,We;return t&&([He,We]=t(Ne)),{render:ze,hydrate:He,createApp:fc(ze,He)}}function Bt({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function no(e,t,n=!1){const r=e.children,l=t.children;if(j(r)&&j(l))for(let s=0;s<r.length;s++){const o=r[s];let i=l[s];i.shapeFlag&1&&!i.dynamicChildren&&((i.patchFlag<=0||i.patchFlag===32)&&(i=l[s]=dt(l[s]),i.el=o.el),n||no(o,i)),i.type===un&&(i.el=o.el)}}function hc(e){const t=e.slice(),n=[0];let r,l,s,o,i;const u=e.length;for(r=0;r<u;r++){const d=e[r];if(d!==0){if(l=n[n.length-1],e[l]<d){t[r]=l,n.push(r);continue}for(s=0,o=n.length-1;s<o;)i=s+o>>1,e[n[i]]<d?s=i+1:o=i;d<e[n[s]]&&(s>0&&(t[r]=n[s-1]),n[s]=r)}}for(s=n.length,o=n[s-1];s-- >0;)n[s]=o,o=t[o];return n}const mc=e=>e.__isTeleport,Fe=Symbol(void 0),un=Symbol(void 0),lt=Symbol(void 0),Sn=Symbol(void 0),$t=[];let je=null;function Vn(e=!1){$t.push(je=e?null:[])}function Cc(){$t.pop(),je=$t[$t.length-1]||null}let on=1;function Bs(e){on+=e}function bc(e){return e.dynamicChildren=on>0?je||Ht:null,Cc(),on>0&&je&&je.push(e),e}function Mn(e,t,n,r,l,s){return bc(W(e,t,n,r,l,s,!0))}function fr(e){return e?e.__v_isVNode===!0:!1}function Dt(e,t){return e.type===t.type&&e.key===t.key}const Yn="__vInternal",ro=({key:e})=>e??null,En=({ref:e,ref_key:t,ref_for:n})=>e!=null?be(e)||ve(e)||x(e)?{i:Me,r:e,k:t,f:!!n}:e:null;function W(e,t=null,n=null,r=0,l=null,s=e===Fe?0:1,o=!1,i=!1){const u={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&ro(t),ref:t&&En(t),scopeId:qn,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:r,dynamicProps:l,dynamicChildren:null,appContext:null,ctx:Me};return i?(Kr(u,n),s&128&&e.normalize(u)):n&&(u.shapeFlag|=be(n)?8:16),on>0&&!o&&je&&(u.patchFlag>0||s&6)&&u.patchFlag!==32&&je.push(u),u}const de=Ac;function Ac(e,t=null,n=null,r=0,l=null,s=!1){if((!e||e===Ja)&&(e=lt),fr(e)){const i=Ct(e,t,!0);return n&&Kr(i,n),on>0&&!s&&je&&(i.shapeFlag&6?je[je.indexOf(e)]=i:je.push(i)),i.patchFlag|=-2,i}if(yc(e)&&(e=e.__vccOpts),t){t=vc(t);let{class:i,style:u}=t;i&&!be(i)&&(t.class=Dr(i)),oe(u)&&(Nl(u)&&!j(u)&&(u=Ee({},u)),t.style=Lr(u))}const o=be(e)?1:qa(e)?128:mc(e)?64:oe(e)?4:x(e)?2:0;return W(e,t,n,r,l,o,s,!0)}function vc(e){return e?Nl(e)||Yn in e?Ee({},e):e:null}function Ct(e,t,n=!1){const{props:r,ref:l,patchFlag:s,children:o}=e,i=t?wc(r||{},t):r;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:i,key:i&&ro(i),ref:t&&t.ref?n&&l?j(l)?l.concat(En(t)):[l,En(t)]:En(t):l,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:o,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==Fe?s===-1?16:s|16:s,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Ct(e.ssContent),ssFallback:e.ssFallback&&Ct(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx}}function pc(e=" ",t=0){return de(un,null,e,t)}function _e(e){return e==null||typeof e=="boolean"?de(lt):j(e)?de(Fe,null,e.slice()):typeof e=="object"?dt(e):de(un,null,String(e))}function dt(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:Ct(e)}function Kr(e,t){let n=0;const{shapeFlag:r}=e;if(t==null)t=null;else if(j(t))n=16;else if(typeof t=="object")if(r&65){const l=t.default;l&&(l._c&&(l._d=!1),Kr(e,l()),l._c&&(l._d=!0));return}else{n=32;const l=t._;!l&&!(Yn in t)?t._ctx=Me:l===3&&Me&&(Me.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else x(t)?(t={default:t,_ctx:Me},n=32):(t=String(t),r&64?(n=16,t=[pc(t)]):n=8);e.children=t,e.shapeFlag|=n}function wc(...e){const t={};for(let n=0;n<e.length;n++){const r=e[n];for(const l in r)if(l==="class")t.class!==r.class&&(t.class=Dr([t.class,r.class]));else if(l==="style")t.style=Lr([t.style,r.style]);else if(Nn(l)){const s=t[l],o=r[l];o&&s!==o&&!(j(s)&&s.includes(o))&&(t[l]=s?[].concat(s,o):o)}else l!==""&&(t[l]=r[l])}return t}function Se(e,t,n,r=null){Ye(e,t,7,[n,r])}const Ec=to();let Bc=0;function Pc(e,t,n){const r=e.type,l=(t?t.appContext:e.appContext)||Ec,s={uid:Bc++,vnode:e,type:r,parent:t,appContext:l,root:null,next:null,subTree:null,effect:null,update:null,scope:new ml(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(l.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Jl(r,l),emitsOptions:Ml(r,l),emit:null,emitted:null,propsDefaults:le,inheritAttrs:r.inheritAttrs,ctx:le,data:le,props:le,attrs:le,slots:le,refs:le,setupState:le,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=t?t.root:s,s.emit=Ta.bind(null,s),e.ce&&e.ce(s),s}let me=null;const Ut=()=>me||Me,Gt=e=>{me=e,e.scope.on()},Ot=()=>{me&&me.scope.off(),me=null};function so(e){return e.vnode.shapeFlag&4}let an=!1;function Lc(e,t=!1){an=t;const{props:n,children:r}=e.vnode,l=so(e);lc(e,n,l,t),cc(e,r);const s=l?Dc(e,t):void 0;return an=!1,s}function Dc(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=Tl(new Proxy(e.ctx,$a));const{setup:r}=n;if(r){const l=e.setupContext=r.length>1?Tc(e):null;Gt(e),Kt();const s=ht(r,e,0,[e.props,l]);if(xt(),Ot(),fl(s)){if(s.then(Ot,Ot),t)return s.then(o=>{Ps(e,o,t)}).catch(o=>{Fn(o,e,0)});e.asyncDep=s}else Ps(e,s,t)}else lo(e,t)}function Ps(e,t,n){x(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:oe(t)&&(e.setupState=Fl(t)),lo(e,n)}let Ls;function lo(e,t,n){const r=e.type;if(!e.render){if(!t&&Ls&&!r.render){const l=r.template||jr(e).template;if(l){const{isCustomElement:s,compilerOptions:o}=e.appContext.config,{delimiters:i,compilerOptions:u}=r,d=Ee(Ee({isCustomElement:s,delimiters:i},o),u);r.render=Ls(l,d)}}e.render=r.render||Re}Gt(e),Kt(),ec(e),xt(),Ot()}function Nc(e){return new Proxy(e.attrs,{get(t,n){return Xe(e,"get","$attrs"),t[n]}})}function Tc(e){const t=r=>{e.exposed=r||{}};let n;return{get attrs(){return n||(n=Nc(e))},slots:e.slots,emit:e.emit,expose:t}}function xr(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Fl(Tl(e.exposed)),{get(t,n){if(n in t)return t[n];if(n in _t)return _t[n](e)},has(t,n){return n in t||n in _t}}))}function Oc(e,t=!0){return x(e)?e.displayName||e.name:e.name||t&&e.__name}function yc(e){return x(e)&&"__vccOpts"in e}const Ge=(e,t)=>wa(e,t,an);function oo(e,t,n){const r=arguments.length;return r===2?oe(t)&&!j(t)?fr(t)?de(e,null,[t]):de(e,t):de(e,null,t):(r>3?n=Array.prototype.slice.call(arguments,2):r===3&&fr(n)&&(n=[n]),de(e,t,n))}const Ic=Symbol(""),Fc=()=>Jt(Ic),Xc="3.2.45",qc="http://www.w3.org/2000/svg",Nt=typeof document<"u"?document:null,Ds=Nt&&Nt.createElement("template"),Hc={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,r)=>{const l=t?Nt.createElementNS(qc,e):Nt.createElement(e,n?{is:n}:void 0);return e==="select"&&r&&r.multiple!=null&&l.setAttribute("multiple",r.multiple),l},createText:e=>Nt.createTextNode(e),createComment:e=>Nt.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>Nt.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,n,r,l,s){const o=n?n.previousSibling:t.lastChild;if(l&&(l===s||l.nextSibling))for(;t.insertBefore(l.cloneNode(!0),n),!(l===s||!(l=l.nextSibling)););else{Ds.innerHTML=r?`<svg>${e}</svg>`:e;const i=Ds.content;if(r){const u=i.firstChild;for(;u.firstChild;)i.appendChild(u.firstChild);i.removeChild(u)}t.insertBefore(i,n)}return[o?o.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}};function Qc(e,t,n){const r=e._vtc;r&&(t=(t?[t,...r]:[...r]).join(" ")),t==null?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}function Vc(e,t,n){const r=e.style,l=be(n);if(n&&!l){for(const s in n)dr(r,s,n[s]);if(t&&!be(t))for(const s in t)n[s]==null&&dr(r,s,"")}else{const s=r.display;l?t!==n&&(r.cssText=n):t&&e.removeAttribute("style"),"_vod"in e&&(r.display=s)}}const Ns=/\s*!important$/;function dr(e,t,n){if(j(n))n.forEach(r=>dr(e,t,r));else if(n==null&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const r=Mc(e,t);Ns.test(n)?e.setProperty(Rt(r),n.replace(Ns,""),"important"):e[r]=n}}const Ts=["Webkit","Moz","ms"],kn={};function Mc(e,t){const n=kn[t];if(n)return n;let r=nt(t);if(r!=="filter"&&r in e)return kn[t]=r;r=yn(r);for(let l=0;l<Ts.length;l++){const s=Ts[l]+r;if(s in e)return kn[t]=s}return t}const Os="http://www.w3.org/1999/xlink";function Yc(e,t,n,r,l){if(r&&t.startsWith("xlink:"))n==null?e.removeAttributeNS(Os,t.slice(6,t.length)):e.setAttributeNS(Os,t,n);else{const s=qo(t);n==null||s&&!cl(n)?e.removeAttribute(t):e.setAttribute(t,s?"":n)}}function Wc(e,t,n,r,l,s,o){if(t==="innerHTML"||t==="textContent"){r&&o(r,l,s),e[t]=n??"";return}if(t==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=n;const u=n??"";(e.value!==u||e.tagName==="OPTION")&&(e.value=u),n==null&&e.removeAttribute(t);return}let i=!1;if(n===""||n==null){const u=typeof e[t];u==="boolean"?n=cl(n):n==null&&u==="string"?(n="",i=!0):u==="number"&&(n=0,i=!0)}try{e[t]=n}catch{}i&&e.removeAttribute(t)}function Uc(e,t,n,r){e.addEventListener(t,n,r)}function Gc(e,t,n,r){e.removeEventListener(t,n,r)}function jc(e,t,n,r,l=null){const s=e._vei||(e._vei={}),o=s[t];if(r&&o)o.value=r;else{const[i,u]=Rc(t);if(r){const d=s[t]=zc(r,l);Uc(e,i,d,u)}else o&&(Gc(e,i,o,u),s[t]=void 0)}}const ys=/(?:Once|Passive|Capture)$/;function Rc(e){let t;if(ys.test(e)){t={};let r;for(;r=e.match(ys);)e=e.slice(0,e.length-r[0].length),t[r[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):Rt(e.slice(2)),t]}let Jn=0;const Kc=Promise.resolve(),xc=()=>Jn||(Kc.then(()=>Jn=0),Jn=Date.now());function zc(e,t){const n=r=>{if(!r._vts)r._vts=Date.now();else if(r._vts<=n.attached)return;Ye(Zc(r,n.value),t,5,[r])};return n.value=e,n.attached=xc(),n}function Zc(e,t){if(j(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map(r=>l=>!l._stopped&&r&&r(l))}else return t}const Is=/^on[a-z]/,Sc=(e,t,n,r,l=!1,s,o,i,u)=>{t==="class"?Qc(e,r,l):t==="style"?Vc(e,n,r):Nn(t)?Nr(t)||jc(e,t,n,r,o):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):kc(e,t,r,l))?Wc(e,t,r,s,o,i,u):(t==="true-value"?e._trueValue=r:t==="false-value"&&(e._falseValue=r),Yc(e,t,r,l))};function kc(e,t,n,r){return r?!!(t==="innerHTML"||t==="textContent"||t in e&&Is.test(t)&&x(n)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA"||Is.test(t)&&be(n)?!1:t in e}const Jc={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};Wa.props;const _c=Ee({patchProp:Sc},Hc);let Fs;function $c(){return Fs||(Fs=dc(_c))}const ei=(...e)=>{const t=$c().createApp(...e),{mount:n}=t;return t.mount=r=>{const l=ti(r);if(!l)return;const s=t._component;!x(s)&&!s.render&&!s.template&&(s.template=l.innerHTML),l.innerHTML="";const o=n(l,!1,l instanceof SVGElement);return l instanceof Element&&(l.removeAttribute("v-cloak"),l.setAttribute("data-v-app","")),o},t};function ti(e){return be(e)?document.querySelector(e):e}/*! js-cookie v3.0.1 | MIT */function An(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)e[r]=n[r]}return e}var ni={read:function(e){return e[0]==='"'&&(e=e.slice(1,-1)),e.replace(/(%[\dA-F]{2})+/gi,decodeURIComponent)},write:function(e){return encodeURIComponent(e).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,decodeURIComponent)}};function gr(e,t){function n(l,s,o){if(!(typeof document>"u")){o=An({},t,o),typeof o.expires=="number"&&(o.expires=new Date(Date.now()+o.expires*864e5)),o.expires&&(o.expires=o.expires.toUTCString()),l=encodeURIComponent(l).replace(/%(2[346B]|5E|60|7C)/g,decodeURIComponent).replace(/[()]/g,escape);var i="";for(var u in o)o[u]&&(i+="; "+u,o[u]!==!0&&(i+="="+o[u].split(";")[0]));return document.cookie=l+"="+e.write(s,l)+i}}function r(l){if(!(typeof document>"u"||arguments.length&&!l)){for(var s=document.cookie?document.cookie.split("; "):[],o={},i=0;i<s.length;i++){var u=s[i].split("="),d=u.slice(1).join("=");try{var h=decodeURIComponent(u[0]);if(o[h]=e.read(d,h),l===h)break}catch{}}return l?o[l]:o}}return Object.create({set:n,get:r,remove:function(l,s){n(l,"",An({},s,{expires:-1}))},withAttributes:function(l){return gr(this.converter,An({},this.attributes,l))},withConverter:function(l){return gr(An({},this.converter,l),this.attributes)}},{attributes:{value:Object.freeze(t)},converter:{value:Object.freeze(e)}})}var Ft=gr(ni,{path:"/"});const zr=(e,t)=>{const n=e.__vccOpts||e;for(const[r,l]of t)n[r]=l;return n},ri={},si={class:"icon-logo",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"194px",height:"40px"},li=W("image",{x:"0px",y:"0px",width:"194px",height:"40px","xlink:href":"data:img/png;base64,"},null,-1),oi=[li];function ai(e,t){return Vn(),Mn("svg",si,oi)}const ci=zr(ri,[["render",ai]]);const ii={name:"ChoiceLanguage",components:{IconLogo:ci},created(){this.$nextTick(function(){this.choiceLanguage()})},methods:{choiceLanguage(){switch(Ft.get("language")){case"zh":this.$refs.btnZh.className="SmileySans active",this.$refs.btnEn.className="SmileySans",this.$refs.btnJp.className="SmileySans";break;case"en":this.$refs.btnZh.className="SmileySans",this.$refs.btnEn.className="SmileySans active",this.$refs.btnJp.className="SmileySans";break;case"jp":this.$refs.btnZh.className="SmileySans",this.$refs.btnEn.className="SmileySans",this.$refs.btnJp.className="SmileySans active";break;default:this.$refs.btnZh.className="SmileySans active",this.$refs.btnEn.className="SmileySans",this.$refs.btnJp.className="SmileySans";break}},choiceZh(){this.$i18n.locale="zh",this.$refs.btnZh.className="SmileySans active",this.$refs.btnEn.className="SmileySans",this.$refs.btnJp.className="SmileySans",Ft.set("language","zh")},choiceEn(){this.$i18n.locale="en",this.$refs.btnZh.className="SmileySans",this.$refs.btnEn.className="SmileySans active",this.$refs.btnJp.className="SmileySans",Ft.set("language","en")},choiceJp(){this.$i18n.locale="jp",this.$refs.btnZh.className="SmileySans",this.$refs.btnEn.className="SmileySans",this.$refs.btnJp.className="SmileySans active",Ft.set("language","jp")}}},ui=e=>(Yl("data-v-be489621"),e=e(),Wl(),e),fi={class:"choice-language"},di=ui(()=>W("span",{class:"separate"},[W("span",{class:"icon"},[W("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24",class:"icon-language"},[W("path",{d:"M0 0h24v24H0z",fill:"none"}),W("path",{d:" M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z ",class:"css-c4d79v"})])])],-1)),gi={class:"language-flyout-menu"};function hi(e,t,n,r,l,s){const o=ka("IconLogo");return Vn(),Mn(Fe,null,[de(o),W("div",fi,[di,W("div",gi,[W("button",{ref:"btnZh",class:"SmileySans active",onClick:t[0]||(t[0]=(...i)=>s.choiceZh&&s.choiceZh(...i))},"中文",512),W("button",{ref:"btnEn",class:"SmileySans",onClick:t[1]||(t[1]=(...i)=>s.choiceEn&&s.choiceEn(...i))},"English",512),W("button",{ref:"btnJp",class:"SmileySans",onClick:t[2]||(t[2]=(...i)=>s.choiceJp&&s.choiceJp(...i))},"日本語",512)])])],64)}const mi=zr(ii,[["render",hi],["__scopeId","data-v-be489621"]]);const Ci={name:"Decorate"},ao=e=>(Yl("data-v-1a32dcaf"),e=e(),Wl(),e),bi={class:"decorate-content"},Ai=ao(()=>W("div",{class:"round-pink"},null,-1)),vi=ao(()=>W("div",{class:"round-blue"},null,-1)),pi=[Ai,vi];function wi(e,t,n,r,l,s){return Vn(),Mn("div",bi,pi)}const Zt=zr(Ci,[["render",wi],["__scopeId","data-v-1a32dcaf"]]);const Ei={class:"main-content SmileySans"},Bi={class:"text-title"},Pi={class:"text-content"},Li={class:"text-title"},Di={class:"text-content"},Ni={class:"text-title"},Ti={class:"text-content"},Oi={class:"text-title"},yi={class:"text-content"},Ii={class:"text-title"},Fi={class:"text-content"},Xi={__name:"App",setup(e){return(t,n)=>(Vn(),Mn(Fe,null,[W("header",null,[de(mi)]),W("main",null,[W("div",Ei,[W("div",Bi,[W("span",null,Ae(t.$t("rtTitle")),1),de(Zt)]),W("div",Pi,[W("span",null,Ae(t.$t("rtContent")),1)]),W("div",Li,[W("span",null,Ae(t.$t("noNeedTitle")),1),de(Zt)]),W("div",Di,[W("span",null,Ae(t.$t("noNeedContent1")),1),W("span",null,Ae(t.$t("noNeedContent2")),1)]),W("div",Ni,[W("span",null,Ae(t.$t("needTitle")),1),de(Zt)]),W("div",Ti,[W("span",null,Ae(t.$t("needContent1")),1),W("span",null,Ae(t.$t("needContent2")),1),W("span",null,Ae(t.$t("needContent3")),1),W("span",null,Ae(t.$t("needContent4")),1)]),W("div",Oi,[W("span",null,Ae(t.$t("contactMeTitle")),1),de(Zt)]),W("div",yi,[W("span",null,Ae(t.$t("contactMeContent1")),1),W("span",null,Ae(t.$t("contactMeContent2")),1),W("span",null,Ae(t.$t("contactMeContent3")),1)]),W("div",Ii,[W("span",null,Ae(t.$t("auTitle")),1),de(Zt)]),W("div",Fi,[W("span",null,Ae(t.$t("auContent1")),1),W("span",null,Ae(t.$t("auContent2")),1)])])])],64))}};/*!
  * shared v9.2.2
  * (c) 2022 kazuya kawaguchi
  * Released under the MIT License.
  */const hr=typeof window<"u",qi=typeof Symbol=="function"&&typeof Symbol.toStringTag=="symbol",At=e=>qi?Symbol(e):e,Hi=(e,t,n)=>Qi({l:e,k:t,s:n}),Qi=e=>JSON.stringify(e).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029").replace(/\u0027/g,"\\u0027"),ge=e=>typeof e=="number"&&isFinite(e),Vi=e=>Sr(e)==="[object Date]",bt=e=>Sr(e)==="[object RegExp]",Wn=e=>G(e)&&Object.keys(e).length===0;function Mi(e,t){typeof console<"u"&&(console.warn("[intlify] "+e),t&&console.warn(t.stack))}const Ce=Object.assign;let Xs;const en=()=>Xs||(Xs=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function qs(e){return e.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}const Yi=Object.prototype.hasOwnProperty;function Zr(e,t){return Yi.call(e,t)}const re=Array.isArray,ue=e=>typeof e=="function",q=e=>typeof e=="string",Z=e=>typeof e=="boolean",se=e=>e!==null&&typeof e=="object",co=Object.prototype.toString,Sr=e=>co.call(e),G=e=>Sr(e)==="[object Object]",Wi=e=>e==null?"":re(e)||G(e)&&e.toString===co?JSON.stringify(e,null,2):String(e);/*!
  * message-compiler v9.2.2
  * (c) 2022 kazuya kawaguchi
  * Released under the MIT License.
  */const _={EXPECTED_TOKEN:1,INVALID_TOKEN_IN_PLACEHOLDER:2,UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER:3,UNKNOWN_ESCAPE_SEQUENCE:4,INVALID_UNICODE_ESCAPE_SEQUENCE:5,UNBALANCED_CLOSING_BRACE:6,UNTERMINATED_CLOSING_BRACE:7,EMPTY_PLACEHOLDER:8,NOT_ALLOW_NEST_PLACEHOLDER:9,INVALID_LINKED_FORMAT:10,MUST_HAVE_MESSAGES_IN_PLURAL:11,UNEXPECTED_EMPTY_LINKED_MODIFIER:12,UNEXPECTED_EMPTY_LINKED_KEY:13,UNEXPECTED_LEXICAL_ANALYSIS:14,__EXTEND_POINT__:15};function Un(e,t,n={}){const{domain:r,messages:l,args:s}=n,o=e,i=new SyntaxError(String(o));return i.code=e,t&&(i.location=t),i.domain=r,i}function Ui(e){throw e}function Gi(e,t,n){return{line:e,column:t,offset:n}}function mr(e,t,n){const r={start:e,end:t};return n!=null&&(r.source=n),r}const rt=" ",ji="\r",Le=`
`,Ri=String.fromCharCode(8232),Ki=String.fromCharCode(8233);function xi(e){const t=e;let n=0,r=1,l=1,s=0;const o=Q=>t[Q]===ji&&t[Q+1]===Le,i=Q=>t[Q]===Le,u=Q=>t[Q]===Ki,d=Q=>t[Q]===Ri,h=Q=>o(Q)||i(Q)||u(Q)||d(Q),v=()=>n,A=()=>r,D=()=>l,F=()=>s,T=Q=>o(Q)||u(Q)||d(Q)?Le:t[Q],X=()=>T(n),C=()=>T(n+s);function N(){return s=0,h(n)&&(r++,l=0),o(n)&&n++,n++,l++,t[n]}function P(){return o(n+s)&&s++,s++,t[n+s]}function w(){n=0,r=1,l=1,s=0}function B(Q=0){s=Q}function H(){const Q=n+s;for(;Q!==n;)N();s=0}return{index:v,line:A,column:D,peekOffset:F,charAt:T,currentChar:X,currentPeek:C,next:N,peek:P,reset:w,resetPeek:B,skipToPeek:H}}const ft=void 0,Hs="'",zi="tokenizer";function Zi(e,t={}){const n=t.location!==!1,r=xi(e),l=()=>r.index(),s=()=>Gi(r.line(),r.column(),r.index()),o=s(),i=l(),u={currentType:14,offset:i,startLoc:o,endLoc:o,lastType:14,lastOffset:i,lastStartLoc:o,lastEndLoc:o,braceNest:0,inLinked:!1,text:""},d=()=>u,{onError:h}=t;function v(a,c,f,...m){const E=d();if(c.column+=f,c.offset+=f,h){const O=mr(E.startLoc,c),y=Un(a,O,{domain:zi,args:m});h(y)}}function A(a,c,f){a.endLoc=s(),a.currentType=c;const m={type:c};return n&&(m.loc=mr(a.startLoc,a.endLoc)),f!=null&&(m.value=f),m}const D=a=>A(a,14);function F(a,c){return a.currentChar()===c?(a.next(),c):(v(_.EXPECTED_TOKEN,s(),0,c),"")}function T(a){let c="";for(;a.currentPeek()===rt||a.currentPeek()===Le;)c+=a.currentPeek(),a.peek();return c}function X(a){const c=T(a);return a.skipToPeek(),c}function C(a){if(a===ft)return!1;const c=a.charCodeAt(0);return c>=97&&c<=122||c>=65&&c<=90||c===95}function N(a){if(a===ft)return!1;const c=a.charCodeAt(0);return c>=48&&c<=57}function P(a,c){const{currentType:f}=c;if(f!==2)return!1;T(a);const m=C(a.currentPeek());return a.resetPeek(),m}function w(a,c){const{currentType:f}=c;if(f!==2)return!1;T(a);const m=a.currentPeek()==="-"?a.peek():a.currentPeek(),E=N(m);return a.resetPeek(),E}function B(a,c){const{currentType:f}=c;if(f!==2)return!1;T(a);const m=a.currentPeek()===Hs;return a.resetPeek(),m}function H(a,c){const{currentType:f}=c;if(f!==8)return!1;T(a);const m=a.currentPeek()===".";return a.resetPeek(),m}function Q(a,c){const{currentType:f}=c;if(f!==9)return!1;T(a);const m=C(a.currentPeek());return a.resetPeek(),m}function Y(a,c){const{currentType:f}=c;if(!(f===8||f===12))return!1;T(a);const m=a.currentPeek()===":";return a.resetPeek(),m}function U(a,c){const{currentType:f}=c;if(f!==10)return!1;const m=()=>{const O=a.currentPeek();return O==="{"?C(a.peek()):O==="@"||O==="%"||O==="|"||O===":"||O==="."||O===rt||!O?!1:O===Le?(a.peek(),m()):C(O)},E=m();return a.resetPeek(),E}function K(a){T(a);const c=a.currentPeek()==="|";return a.resetPeek(),c}function te(a){const c=T(a),f=a.currentPeek()==="%"&&a.peek()==="{";return a.resetPeek(),{isModulo:f,hasSpace:c.length>0}}function ie(a,c=!0){const f=(E=!1,O="",y=!1)=>{const I=a.currentPeek();return I==="{"?O==="%"?!1:E:I==="@"||!I?O==="%"?!0:E:I==="%"?(a.peek(),f(E,"%",!0)):I==="|"?O==="%"||y?!0:!(O===rt||O===Le):I===rt?(a.peek(),f(!0,rt,y)):I===Le?(a.peek(),f(!0,Le,y)):!0},m=f();return c&&a.resetPeek(),m}function ae(a,c){const f=a.currentChar();return f===ft?ft:c(f)?(a.next(),f):null}function qe(a){return ae(a,f=>{const m=f.charCodeAt(0);return m>=97&&m<=122||m>=65&&m<=90||m>=48&&m<=57||m===95||m===36})}function ct(a){return ae(a,f=>{const m=f.charCodeAt(0);return m>=48&&m<=57})}function ne(a){return ae(a,f=>{const m=f.charCodeAt(0);return m>=48&&m<=57||m>=65&&m<=70||m>=97&&m<=102})}function S(a){let c="",f="";for(;c=ct(a);)f+=c;return f}function k(a){X(a);const c=a.currentChar();return c!=="%"&&v(_.EXPECTED_TOKEN,s(),0,c),a.next(),"%"}function De(a){let c="";for(;;){const f=a.currentChar();if(f==="{"||f==="}"||f==="@"||f==="|"||!f)break;if(f==="%")if(ie(a))c+=f,a.next();else break;else if(f===rt||f===Le)if(ie(a))c+=f,a.next();else{if(K(a))break;c+=f,a.next()}else c+=f,a.next()}return c}function Ke(a){X(a);let c="",f="";for(;c=qe(a);)f+=c;return a.currentChar()===ft&&v(_.UNTERMINATED_CLOSING_BRACE,s(),0),f}function ye(a){X(a);let c="";return a.currentChar()==="-"?(a.next(),c+=`-${S(a)}`):c+=S(a),a.currentChar()===ft&&v(_.UNTERMINATED_CLOSING_BRACE,s(),0),c}function pe(a){X(a),F(a,"'");let c="",f="";const m=O=>O!==Hs&&O!==Le;for(;c=ae(a,m);)c==="\\"?f+=pt(a):f+=c;const E=a.currentChar();return E===Le||E===ft?(v(_.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER,s(),0),E===Le&&(a.next(),F(a,"'")),f):(F(a,"'"),f)}function pt(a){const c=a.currentChar();switch(c){case"\\":case"'":return a.next(),`\\${c}`;case"u":return it(a,c,4);case"U":return it(a,c,6);default:return v(_.UNKNOWN_ESCAPE_SEQUENCE,s(),0,c),""}}function it(a,c,f){F(a,c);let m="";for(let E=0;E<f;E++){const O=ne(a);if(!O){v(_.INVALID_UNICODE_ESCAPE_SEQUENCE,s(),0,`\\${c}${m}${a.currentChar()}`);break}m+=O}return`\\${c}${m}`}function wt(a){X(a);let c="",f="";const m=E=>E!=="{"&&E!=="}"&&E!==rt&&E!==Le;for(;c=ae(a,m);)f+=c;return f}function Be(a){let c="",f="";for(;c=qe(a);)f+=c;return f}function xe(a){const c=(f=!1,m)=>{const E=a.currentChar();return E==="{"||E==="%"||E==="@"||E==="|"||!E||E===rt?m:E===Le?(m+=E,a.next(),c(f,m)):(m+=E,a.next(),c(!0,m))};return c(!1,"")}function ze(a){X(a);const c=F(a,"|");return X(a),c}function Ne(a,c){let f=null;switch(a.currentChar()){case"{":return c.braceNest>=1&&v(_.NOT_ALLOW_NEST_PLACEHOLDER,s(),0),a.next(),f=A(c,2,"{"),X(a),c.braceNest++,f;case"}":return c.braceNest>0&&c.currentType===2&&v(_.EMPTY_PLACEHOLDER,s(),0),a.next(),f=A(c,3,"}"),c.braceNest--,c.braceNest>0&&X(a),c.inLinked&&c.braceNest===0&&(c.inLinked=!1),f;case"@":return c.braceNest>0&&v(_.UNTERMINATED_CLOSING_BRACE,s(),0),f=He(a,c)||D(c),c.braceNest=0,f;default:let E=!0,O=!0,y=!0;if(K(a))return c.braceNest>0&&v(_.UNTERMINATED_CLOSING_BRACE,s(),0),f=A(c,1,ze(a)),c.braceNest=0,c.inLinked=!1,f;if(c.braceNest>0&&(c.currentType===5||c.currentType===6||c.currentType===7))return v(_.UNTERMINATED_CLOSING_BRACE,s(),0),c.braceNest=0,We(a,c);if(E=P(a,c))return f=A(c,5,Ke(a)),X(a),f;if(O=w(a,c))return f=A(c,6,ye(a)),X(a),f;if(y=B(a,c))return f=A(c,7,pe(a)),X(a),f;if(!E&&!O&&!y)return f=A(c,13,wt(a)),v(_.INVALID_TOKEN_IN_PLACEHOLDER,s(),0,f.value),X(a),f;break}return f}function He(a,c){const{currentType:f}=c;let m=null;const E=a.currentChar();switch((f===8||f===9||f===12||f===10)&&(E===Le||E===rt)&&v(_.INVALID_LINKED_FORMAT,s(),0),E){case"@":return a.next(),m=A(c,8,"@"),c.inLinked=!0,m;case".":return X(a),a.next(),A(c,9,".");case":":return X(a),a.next(),A(c,10,":");default:return K(a)?(m=A(c,1,ze(a)),c.braceNest=0,c.inLinked=!1,m):H(a,c)||Y(a,c)?(X(a),He(a,c)):Q(a,c)?(X(a),A(c,12,Be(a))):U(a,c)?(X(a),E==="{"?Ne(a,c)||m:A(c,11,xe(a))):(f===8&&v(_.INVALID_LINKED_FORMAT,s(),0),c.braceNest=0,c.inLinked=!1,We(a,c))}}function We(a,c){let f={type:14};if(c.braceNest>0)return Ne(a,c)||D(c);if(c.inLinked)return He(a,c)||D(c);switch(a.currentChar()){case"{":return Ne(a,c)||D(c);case"}":return v(_.UNBALANCED_CLOSING_BRACE,s(),0),a.next(),A(c,3,"}");case"@":return He(a,c)||D(c);default:if(K(a))return f=A(c,1,ze(a)),c.braceNest=0,c.inLinked=!1,f;const{isModulo:E,hasSpace:O}=te(a);if(E)return O?A(c,0,De(a)):A(c,4,k(a));if(ie(a))return A(c,0,De(a));break}return f}function g(){const{currentType:a,offset:c,startLoc:f,endLoc:m}=u;return u.lastType=a,u.lastOffset=c,u.lastStartLoc=f,u.lastEndLoc=m,u.offset=l(),u.startLoc=s(),r.currentChar()===ft?A(u,14):We(r,u)}return{nextToken:g,currentOffset:l,currentPosition:s,context:d}}const Si="parser",ki=/(?:\\\\|\\'|\\u([0-9a-fA-F]{4})|\\U([0-9a-fA-F]{6}))/g;function Ji(e,t,n){switch(e){case"\\\\":return"\\";case"\\'":return"'";default:{const r=parseInt(t||n,16);return r<=55295||r>=57344?String.fromCodePoint(r):"�"}}}function _i(e={}){const t=e.location!==!1,{onError:n}=e;function r(C,N,P,w,...B){const H=C.currentPosition();if(H.offset+=w,H.column+=w,n){const Q=mr(P,H),Y=Un(N,Q,{domain:Si,args:B});n(Y)}}function l(C,N,P){const w={type:C,start:N,end:N};return t&&(w.loc={start:P,end:P}),w}function s(C,N,P,w){C.end=N,w&&(C.type=w),t&&C.loc&&(C.loc.end=P)}function o(C,N){const P=C.context(),w=l(3,P.offset,P.startLoc);return w.value=N,s(w,C.currentOffset(),C.currentPosition()),w}function i(C,N){const P=C.context(),{lastOffset:w,lastStartLoc:B}=P,H=l(5,w,B);return H.index=parseInt(N,10),C.nextToken(),s(H,C.currentOffset(),C.currentPosition()),H}function u(C,N){const P=C.context(),{lastOffset:w,lastStartLoc:B}=P,H=l(4,w,B);return H.key=N,C.nextToken(),s(H,C.currentOffset(),C.currentPosition()),H}function d(C,N){const P=C.context(),{lastOffset:w,lastStartLoc:B}=P,H=l(9,w,B);return H.value=N.replace(ki,Ji),C.nextToken(),s(H,C.currentOffset(),C.currentPosition()),H}function h(C){const N=C.nextToken(),P=C.context(),{lastOffset:w,lastStartLoc:B}=P,H=l(8,w,B);return N.type!==12?(r(C,_.UNEXPECTED_EMPTY_LINKED_MODIFIER,P.lastStartLoc,0),H.value="",s(H,w,B),{nextConsumeToken:N,node:H}):(N.value==null&&r(C,_.UNEXPECTED_LEXICAL_ANALYSIS,P.lastStartLoc,0,ke(N)),H.value=N.value||"",s(H,C.currentOffset(),C.currentPosition()),{node:H})}function v(C,N){const P=C.context(),w=l(7,P.offset,P.startLoc);return w.value=N,s(w,C.currentOffset(),C.currentPosition()),w}function A(C){const N=C.context(),P=l(6,N.offset,N.startLoc);let w=C.nextToken();if(w.type===9){const B=h(C);P.modifier=B.node,w=B.nextConsumeToken||C.nextToken()}switch(w.type!==10&&r(C,_.UNEXPECTED_LEXICAL_ANALYSIS,N.lastStartLoc,0,ke(w)),w=C.nextToken(),w.type===2&&(w=C.nextToken()),w.type){case 11:w.value==null&&r(C,_.UNEXPECTED_LEXICAL_ANALYSIS,N.lastStartLoc,0,ke(w)),P.key=v(C,w.value||"");break;case 5:w.value==null&&r(C,_.UNEXPECTED_LEXICAL_ANALYSIS,N.lastStartLoc,0,ke(w)),P.key=u(C,w.value||"");break;case 6:w.value==null&&r(C,_.UNEXPECTED_LEXICAL_ANALYSIS,N.lastStartLoc,0,ke(w)),P.key=i(C,w.value||"");break;case 7:w.value==null&&r(C,_.UNEXPECTED_LEXICAL_ANALYSIS,N.lastStartLoc,0,ke(w)),P.key=d(C,w.value||"");break;default:r(C,_.UNEXPECTED_EMPTY_LINKED_KEY,N.lastStartLoc,0);const B=C.context(),H=l(7,B.offset,B.startLoc);return H.value="",s(H,B.offset,B.startLoc),P.key=H,s(P,B.offset,B.startLoc),{nextConsumeToken:w,node:P}}return s(P,C.currentOffset(),C.currentPosition()),{node:P}}function D(C){const N=C.context(),P=N.currentType===1?C.currentOffset():N.offset,w=N.currentType===1?N.endLoc:N.startLoc,B=l(2,P,w);B.items=[];let H=null;do{const U=H||C.nextToken();switch(H=null,U.type){case 0:U.value==null&&r(C,_.UNEXPECTED_LEXICAL_ANALYSIS,N.lastStartLoc,0,ke(U)),B.items.push(o(C,U.value||""));break;case 6:U.value==null&&r(C,_.UNEXPECTED_LEXICAL_ANALYSIS,N.lastStartLoc,0,ke(U)),B.items.push(i(C,U.value||""));break;case 5:U.value==null&&r(C,_.UNEXPECTED_LEXICAL_ANALYSIS,N.lastStartLoc,0,ke(U)),B.items.push(u(C,U.value||""));break;case 7:U.value==null&&r(C,_.UNEXPECTED_LEXICAL_ANALYSIS,N.lastStartLoc,0,ke(U)),B.items.push(d(C,U.value||""));break;case 8:const K=A(C);B.items.push(K.node),H=K.nextConsumeToken||null;break}}while(N.currentType!==14&&N.currentType!==1);const Q=N.currentType===1?N.lastOffset:C.currentOffset(),Y=N.currentType===1?N.lastEndLoc:C.currentPosition();return s(B,Q,Y),B}function F(C,N,P,w){const B=C.context();let H=w.items.length===0;const Q=l(1,N,P);Q.cases=[],Q.cases.push(w);do{const Y=D(C);H||(H=Y.items.length===0),Q.cases.push(Y)}while(B.currentType!==14);return H&&r(C,_.MUST_HAVE_MESSAGES_IN_PLURAL,P,0),s(Q,C.currentOffset(),C.currentPosition()),Q}function T(C){const N=C.context(),{offset:P,startLoc:w}=N,B=D(C);return N.currentType===14?B:F(C,P,w,B)}function X(C){const N=Zi(C,Ce({},e)),P=N.context(),w=l(0,P.offset,P.startLoc);return t&&w.loc&&(w.loc.source=C),w.body=T(N),P.currentType!==14&&r(N,_.UNEXPECTED_LEXICAL_ANALYSIS,P.lastStartLoc,0,C[P.offset]||""),s(w,N.currentOffset(),N.currentPosition()),w}return{parse:X}}function ke(e){if(e.type===14)return"EOF";const t=(e.value||"").replace(/\r?\n/gu,"\\n");return t.length>10?t.slice(0,9)+"…":t}function $i(e,t={}){const n={ast:e,helpers:new Set};return{context:()=>n,helper:s=>(n.helpers.add(s),s)}}function Qs(e,t){for(let n=0;n<e.length;n++)kr(e[n],t)}function kr(e,t){switch(e.type){case 1:Qs(e.cases,t),t.helper("plural");break;case 2:Qs(e.items,t);break;case 6:kr(e.key,t),t.helper("linked"),t.helper("type");break;case 5:t.helper("interpolate"),t.helper("list");break;case 4:t.helper("interpolate"),t.helper("named");break}}function eu(e,t={}){const n=$i(e);n.helper("normalize"),e.body&&kr(e.body,n);const r=n.context();e.helpers=Array.from(r.helpers)}function tu(e,t){const{sourceMap:n,filename:r,breakLineCode:l,needIndent:s}=t,o={source:e.loc.source,filename:r,code:"",column:1,line:1,offset:0,map:void 0,breakLineCode:l,needIndent:s,indentLevel:0},i=()=>o;function u(T,X){o.code+=T}function d(T,X=!0){const C=X?l:"";u(s?C+"  ".repeat(T):C)}function h(T=!0){const X=++o.indentLevel;T&&d(X)}function v(T=!0){const X=--o.indentLevel;T&&d(X)}function A(){d(o.indentLevel)}return{context:i,push:u,indent:h,deindent:v,newline:A,helper:T=>`_${T}`,needIndent:()=>o.needIndent}}function nu(e,t){const{helper:n}=e;e.push(`${n("linked")}(`),jt(e,t.key),t.modifier?(e.push(", "),jt(e,t.modifier),e.push(", _type")):e.push(", undefined, _type"),e.push(")")}function ru(e,t){const{helper:n,needIndent:r}=e;e.push(`${n("normalize")}([`),e.indent(r());const l=t.items.length;for(let s=0;s<l&&(jt(e,t.items[s]),s!==l-1);s++)e.push(", ");e.deindent(r()),e.push("])")}function su(e,t){const{helper:n,needIndent:r}=e;if(t.cases.length>1){e.push(`${n("plural")}([`),e.indent(r());const l=t.cases.length;for(let s=0;s<l&&(jt(e,t.cases[s]),s!==l-1);s++)e.push(", ");e.deindent(r()),e.push("])")}}function lu(e,t){t.body?jt(e,t.body):e.push("null")}function jt(e,t){const{helper:n}=e;switch(t.type){case 0:lu(e,t);break;case 1:su(e,t);break;case 2:ru(e,t);break;case 6:nu(e,t);break;case 8:e.push(JSON.stringify(t.value),t);break;case 7:e.push(JSON.stringify(t.value),t);break;case 5:e.push(`${n("interpolate")}(${n("list")}(${t.index}))`,t);break;case 4:e.push(`${n("interpolate")}(${n("named")}(${JSON.stringify(t.key)}))`,t);break;case 9:e.push(JSON.stringify(t.value),t);break;case 3:e.push(JSON.stringify(t.value),t);break}}const ou=(e,t={})=>{const n=q(t.mode)?t.mode:"normal",r=q(t.filename)?t.filename:"message.intl",l=!!t.sourceMap,s=t.breakLineCode!=null?t.breakLineCode:n==="arrow"?";":`
`,o=t.needIndent?t.needIndent:n!=="arrow",i=e.helpers||[],u=tu(e,{mode:n,filename:r,sourceMap:l,breakLineCode:s,needIndent:o});u.push(n==="normal"?"function __msg__ (ctx) {":"(ctx) => {"),u.indent(o),i.length>0&&(u.push(`const { ${i.map(v=>`${v}: _${v}`).join(", ")} } = ctx`),u.newline()),u.push("return "),jt(u,e),u.deindent(o),u.push("}");const{code:d,map:h}=u.context();return{ast:e,code:d,map:h?h.toJSON():void 0}};function au(e,t={}){const n=Ce({},t),l=_i(n).parse(e);return eu(l,n),ou(l,n)}/*!
  * devtools-if v9.2.2
  * (c) 2022 kazuya kawaguchi
  * Released under the MIT License.
  */const io={I18nInit:"i18n:init",FunctionTranslate:"function:translate"};/*!
  * core-base v9.2.2
  * (c) 2022 kazuya kawaguchi
  * Released under the MIT License.
  */const vt=[];vt[0]={w:[0],i:[3,0],["["]:[4],o:[7]};vt[1]={w:[1],["."]:[2],["["]:[4],o:[7]};vt[2]={w:[2],i:[3,0],[0]:[3,0]};vt[3]={i:[3,0],[0]:[3,0],w:[1,1],["."]:[2,1],["["]:[4,1],o:[7,1]};vt[4]={["'"]:[5,0],['"']:[6,0],["["]:[4,2],["]"]:[1,3],o:8,l:[4,0]};vt[5]={["'"]:[4,0],o:8,l:[5,0]};vt[6]={['"']:[4,0],o:8,l:[6,0]};const cu=/^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;function iu(e){return cu.test(e)}function uu(e){const t=e.charCodeAt(0),n=e.charCodeAt(e.length-1);return t===n&&(t===34||t===39)?e.slice(1,-1):e}function fu(e){if(e==null)return"o";switch(e.charCodeAt(0)){case 91:case 93:case 46:case 34:case 39:return e;case 95:case 36:case 45:return"i";case 9:case 10:case 13:case 160:case 65279:case 8232:case 8233:return"w"}return"i"}function du(e){const t=e.trim();return e.charAt(0)==="0"&&isNaN(parseInt(e))?!1:iu(t)?uu(t):"*"+t}function gu(e){const t=[];let n=-1,r=0,l=0,s,o,i,u,d,h,v;const A=[];A[0]=()=>{o===void 0?o=i:o+=i},A[1]=()=>{o!==void 0&&(t.push(o),o=void 0)},A[2]=()=>{A[0](),l++},A[3]=()=>{if(l>0)l--,r=4,A[0]();else{if(l=0,o===void 0||(o=du(o),o===!1))return!1;A[1]()}};function D(){const F=e[n+1];if(r===5&&F==="'"||r===6&&F==='"')return n++,i="\\"+F,A[0](),!0}for(;r!==null;)if(n++,s=e[n],!(s==="\\"&&D())){if(u=fu(s),v=vt[r],d=v[u]||v.l||8,d===8||(r=d[0],d[1]!==void 0&&(h=A[d[1]],h&&(i=s,h()===!1))))return;if(r===7)return t}}const Vs=new Map;function hu(e,t){return se(e)?e[t]:null}function mu(e,t){if(!se(e))return null;let n=Vs.get(t);if(n||(n=gu(t),n&&Vs.set(t,n)),!n)return null;const r=n.length;let l=e,s=0;for(;s<r;){const o=l[n[s]];if(o===void 0)return null;l=o,s++}return l}const Cu=e=>e,bu=e=>"",Au="text",vu=e=>e.length===0?"":e.join(""),pu=Wi;function Ms(e,t){return e=Math.abs(e),t===2?e?e>1?1:0:1:e?Math.min(e,2):0}function wu(e){const t=ge(e.pluralIndex)?e.pluralIndex:-1;return e.named&&(ge(e.named.count)||ge(e.named.n))?ge(e.named.count)?e.named.count:ge(e.named.n)?e.named.n:t:t}function Eu(e,t){t.count||(t.count=e),t.n||(t.n=e)}function Bu(e={}){const t=e.locale,n=wu(e),r=se(e.pluralRules)&&q(t)&&ue(e.pluralRules[t])?e.pluralRules[t]:Ms,l=se(e.pluralRules)&&q(t)&&ue(e.pluralRules[t])?Ms:void 0,s=C=>C[r(n,C.length,l)],o=e.list||[],i=C=>o[C],u=e.named||{};ge(e.pluralIndex)&&Eu(n,u);const d=C=>u[C];function h(C){const N=ue(e.messages)?e.messages(C):se(e.messages)?e.messages[C]:!1;return N||(e.parent?e.parent.message(C):bu)}const v=C=>e.modifiers?e.modifiers[C]:Cu,A=G(e.processor)&&ue(e.processor.normalize)?e.processor.normalize:vu,D=G(e.processor)&&ue(e.processor.interpolate)?e.processor.interpolate:pu,F=G(e.processor)&&q(e.processor.type)?e.processor.type:Au,X={list:i,named:d,plural:s,linked:(C,...N)=>{const[P,w]=N;let B="text",H="";N.length===1?se(P)?(H=P.modifier||H,B=P.type||B):q(P)&&(H=P||H):N.length===2&&(q(P)&&(H=P||H),q(w)&&(B=w||B));let Q=h(C)(X);return B==="vnode"&&re(Q)&&H&&(Q=Q[0]),H?v(H)(Q,B):Q},message:h,type:F,interpolate:D,normalize:A};return X}let cn=null;function Pu(e){cn=e}function Lu(e,t,n){cn&&cn.emit(io.I18nInit,{timestamp:Date.now(),i18n:e,version:t,meta:n})}const Du=Nu(io.FunctionTranslate);function Nu(e){return t=>cn&&cn.emit(e,t)}const Tu={NOT_FOUND_KEY:1,FALLBACK_TO_TRANSLATE:2,CANNOT_FORMAT_NUMBER:3,FALLBACK_TO_NUMBER_FORMAT:4,CANNOT_FORMAT_DATE:5,FALLBACK_TO_DATE_FORMAT:6,__EXTEND_POINT__:7};function Ou(e,t,n){return[...new Set([n,...re(t)?t:se(t)?Object.keys(t):q(t)?[t]:[n]])]}function uo(e,t,n){const r=q(n)?n:fn,l=e;l.__localeChainCache||(l.__localeChainCache=new Map);let s=l.__localeChainCache.get(r);if(!s){s=[];let o=[n];for(;re(o);)o=Ys(s,o,t);const i=re(t)||!G(t)?t:t.default?t.default:null;o=q(i)?[i]:i,re(o)&&Ys(s,o,!1),l.__localeChainCache.set(r,s)}return s}function Ys(e,t,n){let r=!0;for(let l=0;l<t.length&&Z(r);l++){const s=t[l];q(s)&&(r=yu(e,t[l],n))}return r}function yu(e,t,n){let r;const l=t.split("-");do{const s=l.join("-");r=Iu(e,s,n),l.splice(-1,1)}while(l.length&&r===!0);return r}function Iu(e,t,n){let r=!1;if(!e.includes(t)&&(r=!0,t)){r=t[t.length-1]!=="!";const l=t.replace(/!/g,"");e.push(l),(re(n)||G(n))&&n[l]&&(r=n[l])}return r}const Fu="9.2.2",Gn=-1,fn="en-US",Ws="",Us=e=>`${e.charAt(0).toLocaleUpperCase()}${e.substr(1)}`;function Xu(){return{upper:(e,t)=>t==="text"&&q(e)?e.toUpperCase():t==="vnode"&&se(e)&&"__v_isVNode"in e?e.children.toUpperCase():e,lower:(e,t)=>t==="text"&&q(e)?e.toLowerCase():t==="vnode"&&se(e)&&"__v_isVNode"in e?e.children.toLowerCase():e,capitalize:(e,t)=>t==="text"&&q(e)?Us(e):t==="vnode"&&se(e)&&"__v_isVNode"in e?Us(e.children):e}}let fo;function qu(e){fo=e}let go;function Hu(e){go=e}let ho;function Qu(e){ho=e}let mo=null;const Gs=e=>{mo=e},Vu=()=>mo;let Co=null;const js=e=>{Co=e},Mu=()=>Co;let Rs=0;function Yu(e={}){const t=q(e.version)?e.version:Fu,n=q(e.locale)?e.locale:fn,r=re(e.fallbackLocale)||G(e.fallbackLocale)||q(e.fallbackLocale)||e.fallbackLocale===!1?e.fallbackLocale:n,l=G(e.messages)?e.messages:{[n]:{}},s=G(e.datetimeFormats)?e.datetimeFormats:{[n]:{}},o=G(e.numberFormats)?e.numberFormats:{[n]:{}},i=Ce({},e.modifiers||{},Xu()),u=e.pluralRules||{},d=ue(e.missing)?e.missing:null,h=Z(e.missingWarn)||bt(e.missingWarn)?e.missingWarn:!0,v=Z(e.fallbackWarn)||bt(e.fallbackWarn)?e.fallbackWarn:!0,A=!!e.fallbackFormat,D=!!e.unresolving,F=ue(e.postTranslation)?e.postTranslation:null,T=G(e.processor)?e.processor:null,X=Z(e.warnHtmlMessage)?e.warnHtmlMessage:!0,C=!!e.escapeParameter,N=ue(e.messageCompiler)?e.messageCompiler:fo,P=ue(e.messageResolver)?e.messageResolver:go||hu,w=ue(e.localeFallbacker)?e.localeFallbacker:ho||Ou,B=se(e.fallbackContext)?e.fallbackContext:void 0,H=ue(e.onWarn)?e.onWarn:Mi,Q=e,Y=se(Q.__datetimeFormatters)?Q.__datetimeFormatters:new Map,U=se(Q.__numberFormatters)?Q.__numberFormatters:new Map,K=se(Q.__meta)?Q.__meta:{};Rs++;const te={version:t,cid:Rs,locale:n,fallbackLocale:r,messages:l,modifiers:i,pluralRules:u,missing:d,missingWarn:h,fallbackWarn:v,fallbackFormat:A,unresolving:D,postTranslation:F,processor:T,warnHtmlMessage:X,escapeParameter:C,messageCompiler:N,messageResolver:P,localeFallbacker:w,fallbackContext:B,onWarn:H,__meta:K};return te.datetimeFormats=s,te.numberFormats=o,te.__datetimeFormatters=Y,te.__numberFormatters=U,__INTLIFY_PROD_DEVTOOLS__&&Lu(te,t,K),te}function Jr(e,t,n,r,l){const{missing:s,onWarn:o}=e;if(s!==null){const i=s(e,n,t,l);return q(i)?i:t}else return t}function St(e,t,n){const r=e;r.__localeChainCache=new Map,e.localeFallbacker(e,n,t)}const Wu=e=>e;let Ks=Object.create(null);function Uu(e,t={}){{const r=(t.onCacheKey||Wu)(e),l=Ks[r];if(l)return l;let s=!1;const o=t.onError||Ui;t.onError=d=>{s=!0,o(d)};const{code:i}=au(e,t),u=new Function(`return ${i}`)();return s?u:Ks[r]=u}}let bo=_.__EXTEND_POINT__;const _n=()=>++bo,Xt={INVALID_ARGUMENT:bo,INVALID_DATE_ARGUMENT:_n(),INVALID_ISO_DATE_ARGUMENT:_n(),__EXTEND_POINT__:_n()};function qt(e){return Un(e,null,void 0)}const xs=()=>"",$e=e=>ue(e);function zs(e,...t){const{fallbackFormat:n,postTranslation:r,unresolving:l,messageCompiler:s,fallbackLocale:o,messages:i}=e,[u,d]=Cr(...t),h=Z(d.missingWarn)?d.missingWarn:e.missingWarn,v=Z(d.fallbackWarn)?d.fallbackWarn:e.fallbackWarn,A=Z(d.escapeParameter)?d.escapeParameter:e.escapeParameter,D=!!d.resolvedMessage,F=q(d.default)||Z(d.default)?Z(d.default)?s?u:()=>u:d.default:n?s?u:()=>u:"",T=n||F!=="",X=q(d.locale)?d.locale:e.locale;A&&Gu(d);let[C,N,P]=D?[u,X,i[X]||{}]:Ao(e,u,X,o,v,h),w=C,B=u;if(!D&&!(q(w)||$e(w))&&T&&(w=F,B=w),!D&&(!(q(w)||$e(w))||!q(N)))return l?Gn:u;let H=!1;const Q=()=>{H=!0},Y=$e(w)?w:vo(e,u,N,w,B,Q);if(H)return w;const U=Ku(e,N,P,d),K=Bu(U),te=ju(e,Y,K),ie=r?r(te,u):te;if(__INTLIFY_PROD_DEVTOOLS__){const ae={timestamp:Date.now(),key:q(u)?u:$e(w)?w.key:"",locale:N||($e(w)?w.locale:""),format:q(w)?w:$e(w)?w.source:"",message:ie};ae.meta=Ce({},e.__meta,Vu()||{}),Du(ae)}return ie}function Gu(e){re(e.list)?e.list=e.list.map(t=>q(t)?qs(t):t):se(e.named)&&Object.keys(e.named).forEach(t=>{q(e.named[t])&&(e.named[t]=qs(e.named[t]))})}function Ao(e,t,n,r,l,s){const{messages:o,onWarn:i,messageResolver:u,localeFallbacker:d}=e,h=d(e,r,n);let v={},A,D=null;const F="translate";for(let T=0;T<h.length&&(A=h[T],v=o[A]||{},(D=u(v,t))===null&&(D=v[t]),!(q(D)||ue(D)));T++){const X=Jr(e,t,A,s,F);X!==t&&(D=X)}return[D,A,v]}function vo(e,t,n,r,l,s){const{messageCompiler:o,warnHtmlMessage:i}=e;if($e(r)){const d=r;return d.locale=d.locale||n,d.key=d.key||t,d}if(o==null){const d=()=>r;return d.locale=n,d.key=t,d}const u=o(r,Ru(e,n,l,r,i,s));return u.locale=n,u.key=t,u.source=r,u}function ju(e,t,n){return t(n)}function Cr(...e){const[t,n,r]=e,l={};if(!q(t)&&!ge(t)&&!$e(t))throw qt(Xt.INVALID_ARGUMENT);const s=ge(t)?String(t):($e(t),t);return ge(n)?l.plural=n:q(n)?l.default=n:G(n)&&!Wn(n)?l.named=n:re(n)&&(l.list=n),ge(r)?l.plural=r:q(r)?l.default=r:G(r)&&Ce(l,r),[s,l]}function Ru(e,t,n,r,l,s){return{warnHtmlMessage:l,onError:o=>{throw s&&s(o),o},onCacheKey:o=>Hi(t,n,o)}}function Ku(e,t,n,r){const{modifiers:l,pluralRules:s,messageResolver:o,fallbackLocale:i,fallbackWarn:u,missingWarn:d,fallbackContext:h}=e,A={locale:t,modifiers:l,pluralRules:s,messages:D=>{let F=o(n,D);if(F==null&&h){const[,,T]=Ao(h,D,t,i,u,d);F=o(T,D)}if(q(F)){let T=!1;const C=vo(e,D,t,F,D,()=>{T=!0});return T?xs:C}else return $e(F)?F:xs}};return e.processor&&(A.processor=e.processor),r.list&&(A.list=r.list),r.named&&(A.named=r.named),ge(r.plural)&&(A.pluralIndex=r.plural),A}function Zs(e,...t){const{datetimeFormats:n,unresolving:r,fallbackLocale:l,onWarn:s,localeFallbacker:o}=e,{__datetimeFormatters:i}=e,[u,d,h,v]=br(...t),A=Z(h.missingWarn)?h.missingWarn:e.missingWarn;Z(h.fallbackWarn)?h.fallbackWarn:e.fallbackWarn;const D=!!h.part,F=q(h.locale)?h.locale:e.locale,T=o(e,l,F);if(!q(u)||u==="")return new Intl.DateTimeFormat(F,v).format(d);let X={},C,N=null;const P="datetime format";for(let H=0;H<T.length&&(C=T[H],X=n[C]||{},N=X[u],!G(N));H++)Jr(e,u,C,A,P);if(!G(N)||!q(C))return r?Gn:u;let w=`${C}__${u}`;Wn(v)||(w=`${w}__${JSON.stringify(v)}`);let B=i.get(w);return B||(B=new Intl.DateTimeFormat(C,Ce({},N,v)),i.set(w,B)),D?B.formatToParts(d):B.format(d)}const po=["localeMatcher","weekday","era","year","month","day","hour","minute","second","timeZoneName","formatMatcher","hour12","timeZone","dateStyle","timeStyle","calendar","dayPeriod","numberingSystem","hourCycle","fractionalSecondDigits"];function br(...e){const[t,n,r,l]=e,s={};let o={},i;if(q(t)){const u=t.match(/(\d{4}-\d{2}-\d{2})(T|\s)?(.*)/);if(!u)throw qt(Xt.INVALID_ISO_DATE_ARGUMENT);const d=u[3]?u[3].trim().startsWith("T")?`${u[1].trim()}${u[3].trim()}`:`${u[1].trim()}T${u[3].trim()}`:u[1].trim();i=new Date(d);try{i.toISOString()}catch{throw qt(Xt.INVALID_ISO_DATE_ARGUMENT)}}else if(Vi(t)){if(isNaN(t.getTime()))throw qt(Xt.INVALID_DATE_ARGUMENT);i=t}else if(ge(t))i=t;else throw qt(Xt.INVALID_ARGUMENT);return q(n)?s.key=n:G(n)&&Object.keys(n).forEach(u=>{po.includes(u)?o[u]=n[u]:s[u]=n[u]}),q(r)?s.locale=r:G(r)&&(o=r),G(l)&&(o=l),[s.key||"",i,s,o]}function Ss(e,t,n){const r=e;for(const l in n){const s=`${t}__${l}`;r.__datetimeFormatters.has(s)&&r.__datetimeFormatters.delete(s)}}function ks(e,...t){const{numberFormats:n,unresolving:r,fallbackLocale:l,onWarn:s,localeFallbacker:o}=e,{__numberFormatters:i}=e,[u,d,h,v]=Ar(...t),A=Z(h.missingWarn)?h.missingWarn:e.missingWarn;Z(h.fallbackWarn)?h.fallbackWarn:e.fallbackWarn;const D=!!h.part,F=q(h.locale)?h.locale:e.locale,T=o(e,l,F);if(!q(u)||u==="")return new Intl.NumberFormat(F,v).format(d);let X={},C,N=null;const P="number format";for(let H=0;H<T.length&&(C=T[H],X=n[C]||{},N=X[u],!G(N));H++)Jr(e,u,C,A,P);if(!G(N)||!q(C))return r?Gn:u;let w=`${C}__${u}`;Wn(v)||(w=`${w}__${JSON.stringify(v)}`);let B=i.get(w);return B||(B=new Intl.NumberFormat(C,Ce({},N,v)),i.set(w,B)),D?B.formatToParts(d):B.format(d)}const wo=["localeMatcher","style","currency","currencyDisplay","currencySign","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","compactDisplay","notation","signDisplay","unit","unitDisplay","roundingMode","roundingPriority","roundingIncrement","trailingZeroDisplay"];function Ar(...e){const[t,n,r,l]=e,s={};let o={};if(!ge(t))throw qt(Xt.INVALID_ARGUMENT);const i=t;return q(n)?s.key=n:G(n)&&Object.keys(n).forEach(u=>{wo.includes(u)?o[u]=n[u]:s[u]=n[u]}),q(r)?s.locale=r:G(r)&&(o=r),G(l)&&(o=l),[s.key||"",i,s,o]}function Js(e,t,n){const r=e;for(const l in n){const s=`${t}__${l}`;r.__numberFormatters.has(s)&&r.__numberFormatters.delete(s)}}typeof __INTLIFY_PROD_DEVTOOLS__!="boolean"&&(en().__INTLIFY_PROD_DEVTOOLS__=!1);/*!
  * vue-i18n v9.2.2
  * (c) 2022 kazuya kawaguchi
  * Released under the MIT License.
  */const xu="9.2.2";function zu(){typeof __VUE_I18N_FULL_INSTALL__!="boolean"&&(en().__VUE_I18N_FULL_INSTALL__=!0),typeof __VUE_I18N_LEGACY_API__!="boolean"&&(en().__VUE_I18N_LEGACY_API__=!0),typeof __INTLIFY_PROD_DEVTOOLS__!="boolean"&&(en().__INTLIFY_PROD_DEVTOOLS__=!1)}Tu.__EXTEND_POINT__;let Eo=_.__EXTEND_POINT__;const Te=()=>++Eo,fe={UNEXPECTED_RETURN_TYPE:Eo,INVALID_ARGUMENT:Te(),MUST_BE_CALL_SETUP_TOP:Te(),NOT_INSLALLED:Te(),NOT_AVAILABLE_IN_LEGACY_MODE:Te(),REQUIRED_VALUE:Te(),INVALID_VALUE:Te(),CANNOT_SETUP_VUE_DEVTOOLS_PLUGIN:Te(),NOT_INSLALLED_WITH_PROVIDE:Te(),UNEXPECTED_ERROR:Te(),NOT_COMPATIBLE_LEGACY_VUE_I18N:Te(),BRIDGE_SUPPORT_VUE_2_ONLY:Te(),MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION:Te(),NOT_AVAILABLE_COMPOSITION_IN_LEGACY:Te(),__EXTEND_POINT__:Te()};function he(e,...t){return Un(e,null,void 0)}const vr=At("__transrateVNode"),pr=At("__datetimeParts"),wr=At("__numberParts"),Bo=At("__setPluralRules");At("__intlifyMeta");const Po=At("__injectWithOption");function Er(e){if(!se(e))return e;for(const t in e)if(Zr(e,t))if(!t.includes("."))se(e[t])&&Er(e[t]);else{const n=t.split("."),r=n.length-1;let l=e;for(let s=0;s<r;s++)n[s]in l||(l[n[s]]={}),l=l[n[s]];l[n[r]]=e[t],delete e[t],se(l[n[r]])&&Er(l[n[r]])}return e}function jn(e,t){const{messages:n,__i18n:r,messageResolver:l,flatJson:s}=t,o=G(n)?n:re(r)?{}:{[e]:{}};if(re(r)&&r.forEach(i=>{if("locale"in i&&"resource"in i){const{locale:u,resource:d}=i;u?(o[u]=o[u]||{},tn(d,o[u])):tn(d,o)}else q(i)&&tn(JSON.parse(i),o)}),l==null&&s)for(const i in o)Zr(o,i)&&Er(o[i]);return o}const vn=e=>!se(e)||re(e);function tn(e,t){if(vn(e)||vn(t))throw he(fe.INVALID_VALUE);for(const n in e)Zr(e,n)&&(vn(e[n])||vn(t[n])?t[n]=e[n]:tn(e[n],t[n]))}function Lo(e){return e.type}function Do(e,t,n){let r=se(t.messages)?t.messages:{};"__i18nGlobal"in n&&(r=jn(e.locale.value,{messages:r,__i18n:n.__i18nGlobal}));const l=Object.keys(r);l.length&&l.forEach(s=>{e.mergeLocaleMessage(s,r[s])});{if(se(t.datetimeFormats)){const s=Object.keys(t.datetimeFormats);s.length&&s.forEach(o=>{e.mergeDateTimeFormat(o,t.datetimeFormats[o])})}if(se(t.numberFormats)){const s=Object.keys(t.numberFormats);s.length&&s.forEach(o=>{e.mergeNumberFormat(o,t.numberFormats[o])})}}}function _s(e){return de(un,null,e,0)}const $s="__INTLIFY_META__";let el=0;function tl(e){return(t,n,r,l)=>e(n,r,Ut()||void 0,l)}const Zu=()=>{const e=Ut();let t=null;return e&&(t=Lo(e)[$s])?{[$s]:t}:null};function _r(e={},t){const{__root:n}=e,r=n===void 0;let l=Z(e.inheritLocale)?e.inheritLocale:!0;const s=et(n&&l?n.locale.value:q(e.locale)?e.locale:fn),o=et(n&&l?n.fallbackLocale.value:q(e.fallbackLocale)||re(e.fallbackLocale)||G(e.fallbackLocale)||e.fallbackLocale===!1?e.fallbackLocale:s.value),i=et(jn(s.value,e)),u=et(G(e.datetimeFormats)?e.datetimeFormats:{[s.value]:{}}),d=et(G(e.numberFormats)?e.numberFormats:{[s.value]:{}});let h=n?n.missingWarn:Z(e.missingWarn)||bt(e.missingWarn)?e.missingWarn:!0,v=n?n.fallbackWarn:Z(e.fallbackWarn)||bt(e.fallbackWarn)?e.fallbackWarn:!0,A=n?n.fallbackRoot:Z(e.fallbackRoot)?e.fallbackRoot:!0,D=!!e.fallbackFormat,F=ue(e.missing)?e.missing:null,T=ue(e.missing)?tl(e.missing):null,X=ue(e.postTranslation)?e.postTranslation:null,C=n?n.warnHtmlMessage:Z(e.warnHtmlMessage)?e.warnHtmlMessage:!0,N=!!e.escapeParameter;const P=n?n.modifiers:G(e.modifiers)?e.modifiers:{};let w=e.pluralRules||n&&n.pluralRules,B;B=(()=>{r&&js(null);const b={version:xu,locale:s.value,fallbackLocale:o.value,messages:i.value,modifiers:P,pluralRules:w,missing:T===null?void 0:T,missingWarn:h,fallbackWarn:v,fallbackFormat:D,unresolving:!0,postTranslation:X===null?void 0:X,warnHtmlMessage:C,escapeParameter:N,messageResolver:e.messageResolver,__meta:{framework:"vue"}};b.datetimeFormats=u.value,b.numberFormats=d.value,b.__datetimeFormatters=G(B)?B.__datetimeFormatters:void 0,b.__numberFormatters=G(B)?B.__numberFormatters:void 0;const p=Yu(b);return r&&js(p),p})(),St(B,s.value,o.value);function Q(){return[s.value,o.value,i.value,u.value,d.value]}const Y=Ge({get:()=>s.value,set:b=>{s.value=b,B.locale=s.value}}),U=Ge({get:()=>o.value,set:b=>{o.value=b,B.fallbackLocale=o.value,St(B,s.value,b)}}),K=Ge(()=>i.value),te=Ge(()=>u.value),ie=Ge(()=>d.value);function ae(){return ue(X)?X:null}function qe(b){X=b,B.postTranslation=b}function ct(){return F}function ne(b){b!==null&&(T=tl(b)),F=b,B.missing=T}const S=(b,p,V,M,R,$)=>{Q();let z;if(__INTLIFY_PROD_DEVTOOLS__)try{Gs(Zu()),r||(B.fallbackContext=n?Mu():void 0),z=b(B)}finally{Gs(null),r||(B.fallbackContext=void 0)}else z=b(B);if(ge(z)&&z===Gn){const[ce,Qe]=p();return n&&A?M(n):R(ce)}else{if($(z))return z;throw he(fe.UNEXPECTED_RETURN_TYPE)}};function k(...b){return S(p=>Reflect.apply(zs,null,[p,...b]),()=>Cr(...b),"translate",p=>Reflect.apply(p.t,p,[...b]),p=>p,p=>q(p))}function De(...b){const[p,V,M]=b;if(M&&!se(M))throw he(fe.INVALID_ARGUMENT);return k(p,V,Ce({resolvedMessage:!0},M||{}))}function Ke(...b){return S(p=>Reflect.apply(Zs,null,[p,...b]),()=>br(...b),"datetime format",p=>Reflect.apply(p.d,p,[...b]),()=>Ws,p=>q(p))}function ye(...b){return S(p=>Reflect.apply(ks,null,[p,...b]),()=>Ar(...b),"number format",p=>Reflect.apply(p.n,p,[...b]),()=>Ws,p=>q(p))}function pe(b){return b.map(p=>q(p)||ge(p)||Z(p)?_s(String(p)):p)}const it={normalize:pe,interpolate:b=>b,type:"vnode"};function wt(...b){return S(p=>{let V;const M=p;try{M.processor=it,V=Reflect.apply(zs,null,[M,...b])}finally{M.processor=null}return V},()=>Cr(...b),"translate",p=>p[vr](...b),p=>[_s(p)],p=>re(p))}function Be(...b){return S(p=>Reflect.apply(ks,null,[p,...b]),()=>Ar(...b),"number format",p=>p[wr](...b),()=>[],p=>q(p)||re(p))}function xe(...b){return S(p=>Reflect.apply(Zs,null,[p,...b]),()=>br(...b),"datetime format",p=>p[pr](...b),()=>[],p=>q(p)||re(p))}function ze(b){w=b,B.pluralRules=w}function Ne(b,p){const V=q(p)?p:s.value,M=g(V);return B.messageResolver(M,b)!==null}function He(b){let p=null;const V=uo(B,o.value,s.value);for(let M=0;M<V.length;M++){const R=i.value[V[M]]||{},$=B.messageResolver(R,b);if($!=null){p=$;break}}return p}function We(b){const p=He(b);return p??(n?n.tm(b)||{}:{})}function g(b){return i.value[b]||{}}function a(b,p){i.value[b]=p,B.messages=i.value}function c(b,p){i.value[b]=i.value[b]||{},tn(p,i.value[b]),B.messages=i.value}function f(b){return u.value[b]||{}}function m(b,p){u.value[b]=p,B.datetimeFormats=u.value,Ss(B,b,p)}function E(b,p){u.value[b]=Ce(u.value[b]||{},p),B.datetimeFormats=u.value,Ss(B,b,p)}function O(b){return d.value[b]||{}}function y(b,p){d.value[b]=p,B.numberFormats=d.value,Js(B,b,p)}function I(b,p){d.value[b]=Ce(d.value[b]||{},p),B.numberFormats=d.value,Js(B,b,p)}el++,n&&hr&&(Yt(n.locale,b=>{l&&(s.value=b,B.locale=b,St(B,s.value,o.value))}),Yt(n.fallbackLocale,b=>{l&&(o.value=b,B.fallbackLocale=b,St(B,s.value,o.value))}));const L={id:el,locale:Y,fallbackLocale:U,get inheritLocale(){return l},set inheritLocale(b){l=b,b&&n&&(s.value=n.locale.value,o.value=n.fallbackLocale.value,St(B,s.value,o.value))},get availableLocales(){return Object.keys(i.value).sort()},messages:K,get modifiers(){return P},get pluralRules(){return w||{}},get isGlobal(){return r},get missingWarn(){return h},set missingWarn(b){h=b,B.missingWarn=h},get fallbackWarn(){return v},set fallbackWarn(b){v=b,B.fallbackWarn=v},get fallbackRoot(){return A},set fallbackRoot(b){A=b},get fallbackFormat(){return D},set fallbackFormat(b){D=b,B.fallbackFormat=D},get warnHtmlMessage(){return C},set warnHtmlMessage(b){C=b,B.warnHtmlMessage=b},get escapeParameter(){return N},set escapeParameter(b){N=b,B.escapeParameter=b},t:k,getLocaleMessage:g,setLocaleMessage:a,mergeLocaleMessage:c,getPostTranslationHandler:ae,setPostTranslationHandler:qe,getMissingHandler:ct,setMissingHandler:ne,[Bo]:ze};return L.datetimeFormats=te,L.numberFormats=ie,L.rt=De,L.te=Ne,L.tm=We,L.d=Ke,L.n=ye,L.getDateTimeFormat=f,L.setDateTimeFormat=m,L.mergeDateTimeFormat=E,L.getNumberFormat=O,L.setNumberFormat=y,L.mergeNumberFormat=I,L[Po]=e.__injectWithOption,L[vr]=wt,L[pr]=xe,L[wr]=Be,L}function Su(e){const t=q(e.locale)?e.locale:fn,n=q(e.fallbackLocale)||re(e.fallbackLocale)||G(e.fallbackLocale)||e.fallbackLocale===!1?e.fallbackLocale:t,r=ue(e.missing)?e.missing:void 0,l=Z(e.silentTranslationWarn)||bt(e.silentTranslationWarn)?!e.silentTranslationWarn:!0,s=Z(e.silentFallbackWarn)||bt(e.silentFallbackWarn)?!e.silentFallbackWarn:!0,o=Z(e.fallbackRoot)?e.fallbackRoot:!0,i=!!e.formatFallbackMessages,u=G(e.modifiers)?e.modifiers:{},d=e.pluralizationRules,h=ue(e.postTranslation)?e.postTranslation:void 0,v=q(e.warnHtmlInMessage)?e.warnHtmlInMessage!=="off":!0,A=!!e.escapeParameterHtml,D=Z(e.sync)?e.sync:!0;let F=e.messages;if(G(e.sharedMessages)){const B=e.sharedMessages;F=Object.keys(B).reduce((Q,Y)=>{const U=Q[Y]||(Q[Y]={});return Ce(U,B[Y]),Q},F||{})}const{__i18n:T,__root:X,__injectWithOption:C}=e,N=e.datetimeFormats,P=e.numberFormats,w=e.flatJson;return{locale:t,fallbackLocale:n,messages:F,flatJson:w,datetimeFormats:N,numberFormats:P,missing:r,missingWarn:l,fallbackWarn:s,fallbackRoot:o,fallbackFormat:i,modifiers:u,pluralRules:d,postTranslation:h,warnHtmlMessage:v,escapeParameter:A,messageResolver:e.messageResolver,inheritLocale:D,__i18n:T,__root:X,__injectWithOption:C}}function Br(e={},t){{const n=_r(Su(e)),r={id:n.id,get locale(){return n.locale.value},set locale(l){n.locale.value=l},get fallbackLocale(){return n.fallbackLocale.value},set fallbackLocale(l){n.fallbackLocale.value=l},get messages(){return n.messages.value},get datetimeFormats(){return n.datetimeFormats.value},get numberFormats(){return n.numberFormats.value},get availableLocales(){return n.availableLocales},get formatter(){return{interpolate(){return[]}}},set formatter(l){},get missing(){return n.getMissingHandler()},set missing(l){n.setMissingHandler(l)},get silentTranslationWarn(){return Z(n.missingWarn)?!n.missingWarn:n.missingWarn},set silentTranslationWarn(l){n.missingWarn=Z(l)?!l:l},get silentFallbackWarn(){return Z(n.fallbackWarn)?!n.fallbackWarn:n.fallbackWarn},set silentFallbackWarn(l){n.fallbackWarn=Z(l)?!l:l},get modifiers(){return n.modifiers},get formatFallbackMessages(){return n.fallbackFormat},set formatFallbackMessages(l){n.fallbackFormat=l},get postTranslation(){return n.getPostTranslationHandler()},set postTranslation(l){n.setPostTranslationHandler(l)},get sync(){return n.inheritLocale},set sync(l){n.inheritLocale=l},get warnHtmlInMessage(){return n.warnHtmlMessage?"warn":"off"},set warnHtmlInMessage(l){n.warnHtmlMessage=l!=="off"},get escapeParameterHtml(){return n.escapeParameter},set escapeParameterHtml(l){n.escapeParameter=l},get preserveDirectiveContent(){return!0},set preserveDirectiveContent(l){},get pluralizationRules(){return n.pluralRules||{}},__composer:n,t(...l){const[s,o,i]=l,u={};let d=null,h=null;if(!q(s))throw he(fe.INVALID_ARGUMENT);const v=s;return q(o)?u.locale=o:re(o)?d=o:G(o)&&(h=o),re(i)?d=i:G(i)&&(h=i),Reflect.apply(n.t,n,[v,d||h||{},u])},rt(...l){return Reflect.apply(n.rt,n,[...l])},tc(...l){const[s,o,i]=l,u={plural:1};let d=null,h=null;if(!q(s))throw he(fe.INVALID_ARGUMENT);const v=s;return q(o)?u.locale=o:ge(o)?u.plural=o:re(o)?d=o:G(o)&&(h=o),q(i)?u.locale=i:re(i)?d=i:G(i)&&(h=i),Reflect.apply(n.t,n,[v,d||h||{},u])},te(l,s){return n.te(l,s)},tm(l){return n.tm(l)},getLocaleMessage(l){return n.getLocaleMessage(l)},setLocaleMessage(l,s){n.setLocaleMessage(l,s)},mergeLocaleMessage(l,s){n.mergeLocaleMessage(l,s)},d(...l){return Reflect.apply(n.d,n,[...l])},getDateTimeFormat(l){return n.getDateTimeFormat(l)},setDateTimeFormat(l,s){n.setDateTimeFormat(l,s)},mergeDateTimeFormat(l,s){n.mergeDateTimeFormat(l,s)},n(...l){return Reflect.apply(n.n,n,[...l])},getNumberFormat(l){return n.getNumberFormat(l)},setNumberFormat(l,s){n.setNumberFormat(l,s)},mergeNumberFormat(l,s){n.mergeNumberFormat(l,s)},getChoiceIndex(l,s){return-1},__onComponentInstanceCreated(l){const{componentInstanceCreatedListener:s}=e;s&&s(l,r)}};return r}}const $r={tag:{type:[String,Object]},locale:{type:String},scope:{type:String,validator:e=>e==="parent"||e==="global",default:"parent"},i18n:{type:Object}};function ku({slots:e},t){return t.length===1&&t[0]==="default"?(e.default?e.default():[]).reduce((r,l)=>r=[...r,...re(l.children)?l.children:[l]],[]):t.reduce((n,r)=>{const l=e[r];return l&&(n[r]=l()),n},{})}function No(e){return Fe}const nl={name:"i18n-t",props:Ce({keypath:{type:String,required:!0},plural:{type:[Number,String],validator:e=>ge(e)||!isNaN(e)}},$r),setup(e,t){const{slots:n,attrs:r}=t,l=e.i18n||es({useScope:e.scope,__useComponent:!0});return()=>{const s=Object.keys(n).filter(v=>v!=="_"),o={};e.locale&&(o.locale=e.locale),e.plural!==void 0&&(o.plural=q(e.plural)?+e.plural:e.plural);const i=ku(t,s),u=l[vr](e.keypath,i,o),d=Ce({},r),h=q(e.tag)||se(e.tag)?e.tag:No();return oo(h,d,u)}}};function Ju(e){return re(e)&&!q(e[0])}function To(e,t,n,r){const{slots:l,attrs:s}=t;return()=>{const o={part:!0};let i={};e.locale&&(o.locale=e.locale),q(e.format)?o.key=e.format:se(e.format)&&(q(e.format.key)&&(o.key=e.format.key),i=Object.keys(e.format).reduce((A,D)=>n.includes(D)?Ce({},A,{[D]:e.format[D]}):A,{}));const u=r(e.value,o,i);let d=[o.key];re(u)?d=u.map((A,D)=>{const F=l[A.type],T=F?F({[A.type]:A.value,index:D,parts:u}):[A.value];return Ju(T)&&(T[0].key=`${A.type}-${D}`),T}):q(u)&&(d=[u]);const h=Ce({},s),v=q(e.tag)||se(e.tag)?e.tag:No();return oo(v,h,d)}}const rl={name:"i18n-n",props:Ce({value:{type:Number,required:!0},format:{type:[String,Object]}},$r),setup(e,t){const n=e.i18n||es({useScope:"parent",__useComponent:!0});return To(e,t,wo,(...r)=>n[wr](...r))}},sl={name:"i18n-d",props:Ce({value:{type:[Number,Date],required:!0},format:{type:[String,Object]}},$r),setup(e,t){const n=e.i18n||es({useScope:"parent",__useComponent:!0});return To(e,t,po,(...r)=>n[pr](...r))}};function _u(e,t){const n=e;if(e.mode==="composition")return n.__getInstance(t)||e.global;{const r=n.__getInstance(t);return r!=null?r.__composer:e.global.__composer}}function $u(e){const t=o=>{const{instance:i,modifiers:u,value:d}=o;if(!i||!i.$)throw he(fe.UNEXPECTED_ERROR);const h=_u(e,i.$),v=ll(d);return[Reflect.apply(h.t,h,[...ol(v)]),h]};return{created:(o,i)=>{const[u,d]=t(i);hr&&e.global===d&&(o.__i18nWatcher=Yt(d.locale,()=>{i.instance&&i.instance.$forceUpdate()})),o.__composer=d,o.textContent=u},unmounted:o=>{hr&&o.__i18nWatcher&&(o.__i18nWatcher(),o.__i18nWatcher=void 0,delete o.__i18nWatcher),o.__composer&&(o.__composer=void 0,delete o.__composer)},beforeUpdate:(o,{value:i})=>{if(o.__composer){const u=o.__composer,d=ll(i);o.textContent=Reflect.apply(u.t,u,[...ol(d)])}},getSSRProps:o=>{const[i]=t(o);return{textContent:i}}}}function ll(e){if(q(e))return{path:e};if(G(e)){if(!("path"in e))throw he(fe.REQUIRED_VALUE,"path");return e}else throw he(fe.INVALID_VALUE)}function ol(e){const{path:t,locale:n,args:r,choice:l,plural:s}=e,o={},i=r||{};return q(n)&&(o.locale=n),ge(l)&&(o.plural=l),ge(s)&&(o.plural=s),[t,i,o]}function ef(e,t,...n){const r=G(n[0])?n[0]:{},l=!!r.useI18nComponentName;(Z(r.globalInstall)?r.globalInstall:!0)&&(e.component(l?"i18n":nl.name,nl),e.component(rl.name,rl),e.component(sl.name,sl)),e.directive("t",$u(t))}function tf(e,t,n){return{beforeCreate(){const r=Ut();if(!r)throw he(fe.UNEXPECTED_ERROR);const l=this.$options;if(l.i18n){const s=l.i18n;l.__i18n&&(s.__i18n=l.__i18n),s.__root=t,this===this.$root?this.$i18n=al(e,s):(s.__injectWithOption=!0,this.$i18n=Br(s))}else l.__i18n?this===this.$root?this.$i18n=al(e,l):this.$i18n=Br({__i18n:l.__i18n,__injectWithOption:!0,__root:t}):this.$i18n=e;l.__i18nGlobal&&Do(t,l,l),e.__onComponentInstanceCreated(this.$i18n),n.__setInstance(r,this.$i18n),this.$t=(...s)=>this.$i18n.t(...s),this.$rt=(...s)=>this.$i18n.rt(...s),this.$tc=(...s)=>this.$i18n.tc(...s),this.$te=(s,o)=>this.$i18n.te(s,o),this.$d=(...s)=>this.$i18n.d(...s),this.$n=(...s)=>this.$i18n.n(...s),this.$tm=s=>this.$i18n.tm(s)},mounted(){},unmounted(){const r=Ut();if(!r)throw he(fe.UNEXPECTED_ERROR);delete this.$t,delete this.$rt,delete this.$tc,delete this.$te,delete this.$d,delete this.$n,delete this.$tm,n.__deleteInstance(r),delete this.$i18n}}}function al(e,t){e.locale=t.locale||e.locale,e.fallbackLocale=t.fallbackLocale||e.fallbackLocale,e.missing=t.missing||e.missing,e.silentTranslationWarn=t.silentTranslationWarn||e.silentFallbackWarn,e.silentFallbackWarn=t.silentFallbackWarn||e.silentFallbackWarn,e.formatFallbackMessages=t.formatFallbackMessages||e.formatFallbackMessages,e.postTranslation=t.postTranslation||e.postTranslation,e.warnHtmlInMessage=t.warnHtmlInMessage||e.warnHtmlInMessage,e.escapeParameterHtml=t.escapeParameterHtml||e.escapeParameterHtml,e.sync=t.sync||e.sync,e.__composer[Bo](t.pluralizationRules||e.pluralizationRules);const n=jn(e.locale,{messages:t.messages,__i18n:t.__i18n});return Object.keys(n).forEach(r=>e.mergeLocaleMessage(r,n[r])),t.datetimeFormats&&Object.keys(t.datetimeFormats).forEach(r=>e.mergeDateTimeFormat(r,t.datetimeFormats[r])),t.numberFormats&&Object.keys(t.numberFormats).forEach(r=>e.mergeNumberFormat(r,t.numberFormats[r])),e}const nf=At("global-vue-i18n");function rf(e={},t){const n=__VUE_I18N_LEGACY_API__&&Z(e.legacy)?e.legacy:__VUE_I18N_LEGACY_API__,r=Z(e.globalInjection)?e.globalInjection:!0,l=__VUE_I18N_LEGACY_API__&&n?!!e.allowComposition:!0,s=new Map,[o,i]=sf(e,n),u=At("");function d(A){return s.get(A)||null}function h(A,D){s.set(A,D)}function v(A){s.delete(A)}{const A={get mode(){return __VUE_I18N_LEGACY_API__&&n?"legacy":"composition"},get allowComposition(){return l},async install(D,...F){D.__VUE_I18N_SYMBOL__=u,D.provide(D.__VUE_I18N_SYMBOL__,A),!n&&r&&hf(D,A.global),__VUE_I18N_FULL_INSTALL__&&ef(D,A,...F),__VUE_I18N_LEGACY_API__&&n&&D.mixin(tf(i,i.__composer,A));const T=D.unmount;D.unmount=()=>{A.dispose(),T()}},get global(){return i},dispose(){o.stop()},__instances:s,__getInstance:d,__setInstance:h,__deleteInstance:v};return A}}function es(e={}){const t=Ut();if(t==null)throw he(fe.MUST_BE_CALL_SETUP_TOP);if(!t.isCE&&t.appContext.app!=null&&!t.appContext.app.__VUE_I18N_SYMBOL__)throw he(fe.NOT_INSLALLED);const n=lf(t),r=af(n),l=Lo(t),s=of(e,l);if(__VUE_I18N_LEGACY_API__&&n.mode==="legacy"&&!e.__useComponent){if(!n.allowComposition)throw he(fe.NOT_AVAILABLE_IN_LEGACY_MODE);return ff(t,s,r,e)}if(s==="global")return Do(r,e,l),r;if(s==="parent"){let u=cf(n,t,e.__useComponent);return u==null&&(u=r),u}const o=n;let i=o.__getInstance(t);if(i==null){const u=Ce({},e);"__i18n"in l&&(u.__i18n=l.__i18n),r&&(u.__root=r),i=_r(u),uf(o,t),o.__setInstance(t,i)}return i}function sf(e,t,n){const r=Go();{const l=__VUE_I18N_LEGACY_API__&&t?r.run(()=>Br(e)):r.run(()=>_r(e));if(l==null)throw he(fe.UNEXPECTED_ERROR);return[r,l]}}function lf(e){{const t=Jt(e.isCE?nf:e.appContext.app.__VUE_I18N_SYMBOL__);if(!t)throw he(e.isCE?fe.NOT_INSLALLED_WITH_PROVIDE:fe.UNEXPECTED_ERROR);return t}}function of(e,t){return Wn(e)?"__i18n"in t?"local":"global":e.useScope?e.useScope:"local"}function af(e){return e.mode==="composition"?e.global:e.global.__composer}function cf(e,t,n=!1){let r=null;const l=t.root;let s=t.parent;for(;s!=null;){const o=e;if(e.mode==="composition")r=o.__getInstance(s);else if(__VUE_I18N_LEGACY_API__){const i=o.__getInstance(s);i!=null&&(r=i.__composer,n&&r&&!r[Po]&&(r=null))}if(r!=null||l===s)break;s=s.parent}return r}function uf(e,t,n){Ur(()=>{},t),Gr(()=>{e.__deleteInstance(t)},t)}function ff(e,t,n,r={}){const l=t==="local",s=Ca(null);if(l&&e.proxy&&!(e.proxy.$options.i18n||e.proxy.$options.__i18n))throw he(fe.MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION);const o=Z(r.inheritLocale)?r.inheritLocale:!0,i=et(l&&o?n.locale.value:q(r.locale)?r.locale:fn),u=et(l&&o?n.fallbackLocale.value:q(r.fallbackLocale)||re(r.fallbackLocale)||G(r.fallbackLocale)||r.fallbackLocale===!1?r.fallbackLocale:i.value),d=et(jn(i.value,r)),h=et(G(r.datetimeFormats)?r.datetimeFormats:{[i.value]:{}}),v=et(G(r.numberFormats)?r.numberFormats:{[i.value]:{}}),A=l?n.missingWarn:Z(r.missingWarn)||bt(r.missingWarn)?r.missingWarn:!0,D=l?n.fallbackWarn:Z(r.fallbackWarn)||bt(r.fallbackWarn)?r.fallbackWarn:!0,F=l?n.fallbackRoot:Z(r.fallbackRoot)?r.fallbackRoot:!0,T=!!r.fallbackFormat,X=ue(r.missing)?r.missing:null,C=ue(r.postTranslation)?r.postTranslation:null,N=l?n.warnHtmlMessage:Z(r.warnHtmlMessage)?r.warnHtmlMessage:!0,P=!!r.escapeParameter,w=l?n.modifiers:G(r.modifiers)?r.modifiers:{},B=r.pluralRules||l&&n.pluralRules;function H(){return[i.value,u.value,d.value,h.value,v.value]}const Q=Ge({get:()=>s.value?s.value.locale.value:i.value,set:c=>{s.value&&(s.value.locale.value=c),i.value=c}}),Y=Ge({get:()=>s.value?s.value.fallbackLocale.value:u.value,set:c=>{s.value&&(s.value.fallbackLocale.value=c),u.value=c}}),U=Ge(()=>s.value?s.value.messages.value:d.value),K=Ge(()=>h.value),te=Ge(()=>v.value);function ie(){return s.value?s.value.getPostTranslationHandler():C}function ae(c){s.value&&s.value.setPostTranslationHandler(c)}function qe(){return s.value?s.value.getMissingHandler():X}function ct(c){s.value&&s.value.setMissingHandler(c)}function ne(c){return H(),c()}function S(...c){return s.value?ne(()=>Reflect.apply(s.value.t,null,[...c])):ne(()=>"")}function k(...c){return s.value?Reflect.apply(s.value.rt,null,[...c]):""}function De(...c){return s.value?ne(()=>Reflect.apply(s.value.d,null,[...c])):ne(()=>"")}function Ke(...c){return s.value?ne(()=>Reflect.apply(s.value.n,null,[...c])):ne(()=>"")}function ye(c){return s.value?s.value.tm(c):{}}function pe(c,f){return s.value?s.value.te(c,f):!1}function pt(c){return s.value?s.value.getLocaleMessage(c):{}}function it(c,f){s.value&&(s.value.setLocaleMessage(c,f),d.value[c]=f)}function wt(c,f){s.value&&s.value.mergeLocaleMessage(c,f)}function Be(c){return s.value?s.value.getDateTimeFormat(c):{}}function xe(c,f){s.value&&(s.value.setDateTimeFormat(c,f),h.value[c]=f)}function ze(c,f){s.value&&s.value.mergeDateTimeFormat(c,f)}function Ne(c){return s.value?s.value.getNumberFormat(c):{}}function He(c,f){s.value&&(s.value.setNumberFormat(c,f),v.value[c]=f)}function We(c,f){s.value&&s.value.mergeNumberFormat(c,f)}const g={get id(){return s.value?s.value.id:-1},locale:Q,fallbackLocale:Y,messages:U,datetimeFormats:K,numberFormats:te,get inheritLocale(){return s.value?s.value.inheritLocale:o},set inheritLocale(c){s.value&&(s.value.inheritLocale=c)},get availableLocales(){return s.value?s.value.availableLocales:Object.keys(d.value)},get modifiers(){return s.value?s.value.modifiers:w},get pluralRules(){return s.value?s.value.pluralRules:B},get isGlobal(){return s.value?s.value.isGlobal:!1},get missingWarn(){return s.value?s.value.missingWarn:A},set missingWarn(c){s.value&&(s.value.missingWarn=c)},get fallbackWarn(){return s.value?s.value.fallbackWarn:D},set fallbackWarn(c){s.value&&(s.value.missingWarn=c)},get fallbackRoot(){return s.value?s.value.fallbackRoot:F},set fallbackRoot(c){s.value&&(s.value.fallbackRoot=c)},get fallbackFormat(){return s.value?s.value.fallbackFormat:T},set fallbackFormat(c){s.value&&(s.value.fallbackFormat=c)},get warnHtmlMessage(){return s.value?s.value.warnHtmlMessage:N},set warnHtmlMessage(c){s.value&&(s.value.warnHtmlMessage=c)},get escapeParameter(){return s.value?s.value.escapeParameter:P},set escapeParameter(c){s.value&&(s.value.escapeParameter=c)},t:S,getPostTranslationHandler:ie,setPostTranslationHandler:ae,getMissingHandler:qe,setMissingHandler:ct,rt:k,d:De,n:Ke,tm:ye,te:pe,getLocaleMessage:pt,setLocaleMessage:it,mergeLocaleMessage:wt,getDateTimeFormat:Be,setDateTimeFormat:xe,mergeDateTimeFormat:ze,getNumberFormat:Ne,setNumberFormat:He,mergeNumberFormat:We};function a(c){c.locale.value=i.value,c.fallbackLocale.value=u.value,Object.keys(d.value).forEach(f=>{c.mergeLocaleMessage(f,d.value[f])}),Object.keys(h.value).forEach(f=>{c.mergeDateTimeFormat(f,h.value[f])}),Object.keys(v.value).forEach(f=>{c.mergeNumberFormat(f,v.value[f])}),c.escapeParameter=P,c.fallbackFormat=T,c.fallbackRoot=F,c.fallbackWarn=D,c.missingWarn=A,c.warnHtmlMessage=N}return xl(()=>{if(e.proxy==null||e.proxy.$i18n==null)throw he(fe.NOT_AVAILABLE_COMPOSITION_IN_LEGACY);const c=s.value=e.proxy.$i18n.__composer;t==="global"?(i.value=c.locale.value,u.value=c.fallbackLocale.value,d.value=c.messages.value,h.value=c.datetimeFormats.value,v.value=c.numberFormats.value):l&&a(c)}),g}const df=["locale","fallbackLocale","availableLocales"],gf=["t","rt","d","n","tm"];function hf(e,t){const n=Object.create(null);df.forEach(r=>{const l=Object.getOwnPropertyDescriptor(t,r);if(!l)throw he(fe.UNEXPECTED_ERROR);const s=ve(l.value)?{get(){return l.value.value},set(o){l.value.value=o}}:{get(){return l.get&&l.get()}};Object.defineProperty(n,r,s)}),e.config.globalProperties.$i18n=n,gf.forEach(r=>{const l=Object.getOwnPropertyDescriptor(t,r);if(!l||!l.value)throw he(fe.UNEXPECTED_ERROR);Object.defineProperty(e.config.globalProperties,`$${r}`,l)})}qu(Uu);Hu(mu);Qu(uo);zu();if(__INTLIFY_PROD_DEVTOOLS__){const e=en();e.__INTLIFY__=!0,Pu(e.__INTLIFY_DEVTOOLS_GLOBAL_HOOK__)}const mf={rtTitle:"声明",rtContent:"如需商业使用视频、图片等资源，必须联系本人购买商业许可。",noNeedTitle:"无需授权",noNeedContent1:"1.将带有【文化】标签的视频、图片等其他资源进行转载、二次创作（不得违背原视频含义）。[商用仍需授权]",noNeedContent2:"2.将视频/图片用作个人桌面背景/头像。",needTitle:"需要授权",needContent1:"1.转载视频、图片等其他资源。",needContent2:"2.将视频、图片等其他资源进行二次创作。",needContent3:"3.将视频、图片等其他资源进行商用。",needContent4:"4.更多请查看授权须知。",contactMeTitle:"如何联系",contactMeContent1:"1.请先查看授权须知。",contactMeContent2:"2.通过哔哩哔哩的私信与本人取得联系。",contactMeContent3:"3.通过邮件与本人取得联系：tsugarcat{'@'}gmail.com",auTitle:"授权须知",auContent1:"1.所有的申请将在72小时内处理完成，超时未回复即表示申请未通过。",auContent2:"2.请按下面模板向本人提交授权申请，未按照模板的申请将不被受理。"},Cf={rtTitle:"Statement",rtContent:"If you need to use video, pictures and other resources commercially, you must contact me to purchase a commercial license.",noNeedTitle:"No authorization required",noNeedContent1:"1. Repost and recreate videos, pictures and other resources with 【文化】 tags (must not violate the meaning of the original video). [Commercial use still requires authorization]",noNeedContent2:"2. Use video/picture as personal desktop background/avatar. ",needTitle:"Need authorization",needContent1:"1. Repost videos, pictures and other resources. ",needContent2:"2. Secondary creation of videos, pictures and other resources. ",needContent3:"3. Use videos, pictures and other resources for commercial use. ",needContent4:"4. For more information, please refer to the authorization notice. ",contactMeTitle:"How to contact",contactMeContent1:"1. Please check the authorization notice first. ",contactMeContent2:"2. Get in touch with me through Bilibili's private message. ",contactMeContent3:"3. Get in touch with me via email: tsugarcat{'@'}gmail.com",auTitle:"Authorization Notice",auContent1:"1. All applications will be processed within 72 hours. If there is no reply after the timeout, it means that the application has not been approved. ",auContent2:"2. Please submit an authorization application to me according to the template below, and applications that do not follow the template will not be accepted. "},bf={rtTitle:"ステートメント",rtContent:"動画、画像、その他のリソースを商用利用するには、私に連絡して商用ライセンスを購入する必要があります。 ",noNeedTitle:"認証は必要ありません",noNeedContent1:"1. 【文化】 タグを使用して、動画、写真、その他のリソースを再投稿および再作成します (元の動画の意味に違反してはなりません)。 [商用利用には引き続き許可が必要です]",noNeedContent2:"2. ビデオ/画像を個人のデスクトップの背景/アバターとして使用します。 ",needTitle:"承認が必要",needContent1:"1. 動画、写真、その他のリソースを再投稿します。 ",needContent2:"2.動画、写真、その他の素材の二次創作。 ",needContent3:"3. 動画、写真、その他のリソースを商用利用する。",needContent4:"4. 詳細については、承認通知を参照してください。",contactMeTitle:"連絡方法",contactMeContent1:"1.まず承認通知を確認してください。",contactMeContent2:"2. Bilibili のプライベート メッセージからご連絡ください。",contactMeContent3:"3. メールで連絡してください: tsugarcat{'@'}gmail.com",auTitle:"承認通知",auContent1:"1. すべての申請は 72 時間以内に処理されます。タイムアウト後に応答がない場合は、申請が承認されていないことを意味します。",auContent2:"2.以下のテンプレートに従って承認申請書を私に提出してください。テンプレートに従わない申請書は受け付けられません。"},Af={zh:{...mf},en:{...Cf},jp:{...bf}},vf=rf({locale:Ft.get("language")||"zh",messages:Af});const ts=ei(Xi);ts.use(vf);ts.use(Ft);ts.mount("#app");
